!function(){var e,n,t,r,i,s,a,l,u,o,c,f,p,h,v,m,g,y,w,d,b,x,k=[].slice;e="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-+*/%^_$<>=?!";c=function(e,n){throw new SyntaxError(""+n+" at "+e.file+":"+e.line+":"+e.character)};l=function(e){return e[e.length-1]};g=function(){var n,t,r,i;i={"(":"group start",")":"group end","{":"funject start","}":"funject end","[":"list start",",":"list delimiter","]":"list end",":":"pattern match","=":"strict assignment",":=":"lazy assignment","|=":"reset strict assignment","|:=":"reset lazy assignment","<-":"inverse assignment","<<":"inheritance assignment","::":"prototypal application"};r=function(e){return e===" "||e==="	"};n=function(e){return-1!=="0123456789".indexOf(e)};t=function(n){return-1!==e.indexOf(n)};return function(e,s,a){var u,o,f,p,h,v,m,g,y,w,d,b,x,S,j,L,M,N,q,C;if(s==null){s="<anonymous>"}if(a==null){a=1}q=function(e,n){if(n==null){n=""}return{type:e,value:n,line:b,file:s,character:h}};N=function(e){throw new SyntaxError(""+e+" at "+s+":"+b+":"+h)};L="";m=0;while(true){y=e.indexOf("#",m);if(y===-1){break}L+=e.substring(m,y);m=y+1;p=e[m];if(p==="|"){++m;M=m;S=1;while(S){u=e.indexOf("#|",m);f=e.indexOf("|#",m);if(u===-1&&f===-1){throw new SyntaxError("Unmatched multiline comment")}if(u!==-1&&(u<f||f===-1)){++S;m=u+2}if(f!==-1&&(f<u||u===-1)){--S;m=f+2}}L+=Array(e.substring(M,m).split("\n").length).join("\n")}else{y=e.indexOf("\n",m);if(y===-1){break}m=y}}L+=e.substring(m);m=0;h=0;w=0;b=a;d=L.length;g=[""];C=[];o=function(){var e,s,a,u,o,c,v,y,x;if(C.length){return C.shift()}p=L[m];while(r(p)){++m;p=L[m]}h=1+m-w;if(m>=d){if(g.length>1){g.pop();return q("outdent")}return q("end")}if((c=L.substr(m,3))==="|:="||(c=L.substr(m,2))===":="||c==="|="||c==="<-"||c==="<<"||c==="::"){m+=c.length;return q(i[c],c)}switch(p){case"\n":case"\r":while(true){while(p==="\n"||p==="\r"){++m;++b;w=m;h=1+m-w;p=L[m]}v="";while(true){p=L[m];if(!r(p)){break}v+=p;++m}if(!(p==="\n"||p==="\r")){break}}a=l(g);u=v.length;o=a.length;switch(false){case u!==o:if(v!==a){N("Inconsistent indentation")}return q("newline");case!(u<o):while(u<o){C.push(q("outdent"));g.pop();a=l(g);o=a.length}if(p&&v!==a){N("Inconsistent indentation")}return C.shift();case!(u>o):if(a!==v.substr(0,o)){N("Inconsistent indentation")}g.push(v);return q("indent")}break;case"{":case"}":case"[":case"]":case":":case"=":case",":case"(":case")":++m;if(p==="="&&L[m]==="="){--m}else{return q(i[p],p)}}if(p==="-"){c=L[m+1];if(c==="."||n(c)){s=true}}if(s||p==="."||n(p)){x="";M=m;if(p==="-"){x+=p;++m;p=L[m]}if(n(p)){while(true){x+=p;++m;p=L[m];if(!n(p)){break}}}f=false;if(p==="."){x+=p;++m;p=L[m];if(!n(p)){--m;p=L[m];if(x!=="."){return q("number",+x.substr(0,x.length-1))}f=true}else{while(true){x+=p;++m;p=L[m];if(!n(p)){break}}}}if(!f){if(p==="e"||p==="E"){x+=p;++m;p=L[m];if(p==="+"||p==="-"){x+=p;++m;p=L[m]}if(!n(p)){h=1+m-w;N("Expected digit")}while(true){x+=p;++m;p=L[m];if(!n(p)){break}}}if(t(p)){m=M;p=L[m]}else{return q("number",+x)}}}if(p==="@"||p==="."||t(p)){y=p==="@"?"formal parameter":p==="."?"symbol":"identifier";x="";while(true){x+=p;++m;p=L[m];if(!t(p)){break}}if(x==="true"||x==="false"){return q("boolean",x==="true")}if(-1!==["nil","unknown","class","module","try","catch","finally","if","then","else"].indexOf(x)){return q(x,x)}if(y==="symbol"){if(x.length===1){h=1+m-w;N("Expected identifier")}return q(y,x.substr(1))}return q(y,x)}if(p==='"'||p==="'"){e=p;x="";++m;p=L[m];while(true){if(p===e){break}if(p==="\\"){++m;switch(p=L[m]){case'"':case"'":case"\\":x+=p;break;case"n":x+="\n";break;case"r":x+="\r";break;case"t":x+="	";break;default:h=1+m-w;N("Invalid escape sequence")}++m;p=L[m];continue}if(!p){N("Unterminated string")}x+=p;++m;p=L[m]}++m;return q("string",x)}return N("Unexpected "+p)};v=o();x=o();j=null;return{here:function(){return v},next:function(){return x},advance:function(){j=v;v=x;x=o();return j},match:function(){var e;e=1<=arguments.length?k.call(arguments,0):[];if(-1!==e.indexOf(v.type)){return this.advance()}if(j&&j.type==="outdent"&&-1!==e.indexOf("newline")){return{type:"newline",value:"",file:j.file,line:j.line,character:j.character}}return null},accept:function(){var e;e=1<=arguments.length?k.call(arguments,0):[];if(-1!==e.indexOf(v.value)){return this.advance()}return null},require:function(){var e;e=1<=arguments.length?k.call(arguments,0):[];return this.match.apply(this,e)||c(v,"Expected "+e.join(" or "))},requireValue:function(){var e;e=1<=arguments.length?k.call(arguments,0):[];return this.accept.apply(this,e)||c(v,"Expected '"+e.join("', '")+"'")}}}}();o=function(){var e,n,t,r,i,s,a,l;a={};e={"^":-7,"*":6,"/":6,"%":6,"+":5,"-":5,">":4,"<":4,">=":4,"<=":4,"==":3,"!=":3,is:3,isnt:3,and:2,or:2};n={not:2};t=function(){function e(){}e.prototype["null"]=function(){return c("Unexpected operator")};e.prototype.left=function(){return c("Unexpected value")};return e}();o=function(e,n,t){var r,i;i=g(e,n,t);while(i.match("newline")){}r=s(i);i.require("end");return r};s=function(e){var n,t,i;n=e.here();t=[];while(true){i=r(e,0,true);if(!i){break}t.push(i);if(!e.match("newline")){break}}return{file:n.file,line:n.line,character:n.character,type:"sequence",expressions:t}};r=function(n,t,i,a){var u,o,f,p,h,v,m,g,y,w,d,b,x,k,S,j,L,M,N;if(t==null){t=0}if(n.match("indent")){k=s(n);n.require("outdent");return k}if(S=n.match("class","module")){if(y=n.match("identifier")){while(true){if(L=n.match("symbol")){y={type:"application",file:L.file,line:L.line,character:L.character,funject:y,argument:L};continue}break}}if(n.accept("<")){x=r(n,0,false,true)}if(n.here().type!=="indent"){c(n.here(),"Expected indent")}o=r(n);k={type:S.type,file:S.file,line:S.line,character:S.character,body:o,parent:x};if(!y){return k}return{type:"assignment",operator:"strict assignment",file:S.file,line:S.line,character:S.character,left:y,right:k}}if(S=n.match("try")){if(n.here().type!=="indent"){c(n.here(),"Expected indent")}o=r(n);n.require("catch");N=n.require("identifier");y=n.match("identifier");if(n.here().type!=="indent"){c(n.here(),"Expected indent")}g=r(n);k={type:"try",file:S.file,line:S.line,character:S.character,body:o,"class":N,"catch":g};if(y){k.name=y}if(n.match("finally")){k["finally"]=r(n)}return k}if(S=n.match("if")){f=r(n,0,false,true);if(n.here().type!=="indent"){n.require("then")}M=r(n);if(n.match("else")){if(n.here().type!=="indent"&&!n.here().type==="if"){c(n.here(),"Expected indent")}m=r(n)}return{type:"if",file:S.file,line:S.line,character:S.character,condition:f,trueBody:M,falseBody:m}}h=l(n);if(!h){if(i){return null}else{c(n.here(),"Expected expression")}}while(true){if(L=n.match("symbol")){h={type:"application",file:L.file,line:L.line,character:L.character,funject:h,argument:L};continue}if(n.here().type==="list start"){L=n.here();h={type:"application",file:L.file,line:L.line,character:L.character,funject:h,argument:l(n)};continue}if(t<7){if(n.here().type==="identifier"){p=false;for(w in e){b=e[w];if(t<Math.abs(b)&&(L=n.accept(w))){h={type:"application",file:L.file,line:L.line,character:L.character,funject:h,argument:L};v=b<0?-1-b:b;if(d=r(n,v,true,a)){h=w==="and"||w==="or"?{type:w,file:L.file,line:L.line,character:L.character,left:h.funject,right:d}:{type:"application",file:L.file,line:L.line,character:L.character,funject:h,argument:d}}p=true;break}}if(p){continue}}if("identifier"===n.here().type&&!e[n.here().value]||-1!==["formal parameter","string","number","boolean","nil","unknown","funject start","group start","list start"].indexOf(n.here().type)){L=n.here();h={type:"application",file:L.file,line:L.line,character:L.character,funject:h,argument:r(n,7,false,a)};continue}if(L=n.match("prototypal application")){j=n.require("identifier");j.type="symbol";h={type:"application",file:L.file,line:j.line,character:j.character,funject:{type:"application",file:L.file,line:L.line,character:L.character,funject:h,argument:{type:"symbol",file:L.file,line:L.line,character:L.character,value:"instance"}},argument:j};continue}if(!a&&"indent"===n.here().type){L=n.here();h={type:"application",file:L.file,line:L.line,character:L.character,funject:h,argument:r(n)};break}}break}if(t===0&&(u=n.match("strict assignment","lazy assignment","reset strict assignment","reset lazy assignment","inverse assignment","inheritance assignment"))){if(u.type!=="inheritance assignment"&&u.type!=="inverse assignment"&&h.type!=="identifier"&&(h.type!=="application"||u.type!=="strict assignment"&&u.type!=="lazy assignment")){c(u,"Invalid left-hand side of assignment")}h={type:"assignment",operator:u.type,file:u.file,line:u.line,character:u.character,left:h,right:r(n,0,false,a)}}return h};l=function(e){var t,s,a,l;if(e.match("group start")){t=r(e);e.require("group end");return t}if(a=e.match("list start")){l=[];if(!e.match("list end")){while(true){l.push(r(e));if(e.match("list end")){break}e.require("list delimiter")}}return{file:a.file,line:a.line,character:a.character,type:"list",values:l}}if(a=e.match("funject start")){s=[];if(!e.match("funject end")){if(e.match("indent")){while(true){s.push(i(e));if(e.match("outdent")){break}e.require("newline")}e.require("funject end")}else{s.push(i(e));e.require("funject end")}}return{file:a.file,line:a.line,character:a.character,type:"funject",patterns:s}}if(e.here().type==="identifier"&&Object.prototype.hasOwnProperty.call(n,e.here().value)){a=e.advance();return{type:"application",file:a.file,line:a.line,character:a.character,funject:r(e,n[a.value]),argument:{type:"symbol",file:a.file,line:a.line,character:a.character,value:"not"}}}if(a=e.match("identifier","formal parameter","symbol","string","number","boolean","nil","unknown")){return a}};i=function(e){var n,t;n=r(e);e.require("pattern match");t=r(e);return{pattern:n,value:t}};return o}();f=function(e){var n;n=function(e){var t,r;switch(e.type){case"number":return["Token-number",e.value];case"symbol":return["Token-symbol",e.value];case"string":return["Token-string",e.value];case"boolean":return["Token-boolean",e.value];case"nil":return["Token-nil"];case"unknown":return["Token-unknown"];case"identifier":return["Token-identifier",e.value];case"formal parameter":return["Token-parameter",e.value];case"list":return["Token-list",function(){var t,i,s,a;s=e.values;a=[];for(t=0,i=s.length;t<i;t++){r=s[t];a.push(n(r))}return a}()];case"funject":return["Token-funject",function(){var r,i,s,a;s=e.patterns;a=[];for(r=0,i=s.length;r<i;r++){t=s[r];a.push([n(t.pattern),n(t.value)])}return a}()];case"sequence":return["Token-sequence",function(){var t,i,s,a;s=e.expressions;a=[];for(t=0,i=s.length;t<i;t++){r=s[t];a.push(n(r))}return a}()];case"application":return["Token-invocation",n(e.funject),n(e.argument)];case"or":case"and":return["Token-"+e.type,n(e.left),n(e.right)];case"class":case"module":if(e.parent){return["Token-"+e.type,n(e.parent),n(e.body)]}else{return["Token-"+e.type,n(e.body)]}break;case"try":if(e["finally"]){return["Token-try",n(e.body),n(e["catch"]),n(e["finally"])]}else{return["Token-try",n(e.body),n(e["catch"])]}break;case"assignment":switch(e.operator){case"strict assignment":if(e.left.type==="application"){return["Token-funject-strict-assignment",n(e.left),n(e.right)]}else{return["Token-strict-assignment",n(e.left),n(e.right)]}break;case"lazy assignment":if(e.left.type==="application"){return["Token-funject-lazy-assignment",n(e.left),n(e.right)]}else{return["Token-lazy-assignment",n(e.left),n(e.right)]}break;case"reset strict assignment":return["Token-reset-strict-assignment",n(e.left),n(e.right)];case"reset lazy assignment":return["Token-reset-lazy-assignment",n(e.left),n(e.right)];case"inheritance assignment":return["Token-funject-inheritance",n(e.left),n(e.right)];case"inverse assignment":return["Token-inverse-definition",n(e.left),n(e.right)]}}};return n(o(e))};p=function(e){var n,t,r,i;r=g(e);n="";i=[];while(true){t=r.advance();if(t.type==="end"){break}switch(t.type){case"indent":console.log(""+n+"{");i.push(n+="    ");break;case"outdent":n=n.substr(4);i.push(console.log(""+n+"}"));break;case"newline":i.push(console.log(""+n+";"));break;default:i.push(console.log(""+n+"(:"+t.line+":"+t.character+") <"+t.type+"> "+t.value))}}return i};h=function(e){var n;n=function(e,t){var r,i,s,a,l,u,o,c,f,p,h,v,m,g;if(t==null){t=""}if(e instanceof Array){if(typeof e[0]==="string"){r=e[0].replace(/^Token-/,"");if(e.length===2&&typeof e[1]!=="object"){return console.log(""+t+r+": "+e[1])}else{console.log(""+t+r);if(e[1]&&typeof e[1][0]!=="string"){f=e[1];v=[];for(s=0,u=f.length;s<u;s++){i=f[s];v.push(n(i,t+"    "))}return v}else{p=e.slice(1);m=[];for(a=0,o=p.length;a<o;a++){i=p[a];m.push(n(i,t+"    "))}return m}}}else{console.log(""+t+"pattern:");h=e.slice(0);g=[];for(l=0,c=h.length;l<c;l++){i=h[l];g.push(n(i,t+"    "))}return g}}else{return console.log(t+e)}};return n(f(e))};m=function(e){};if(typeof module!=="undefined"&&module!==null){b=exports;if(!module.parent){i=null;v=false;s=2;y=false;d=false;t=process.argv.length;while(s<t){switch(n=process.argv[s++]){case"-r":v=true;break;case"-t":y=true;break;case"-v":d=true;break;case"-e":i=process.argv[s++];break;default:i=""+require("fs").readFileSync(n);break}}if(s<t||i==null){console.error("Usage: coffee parser.coffee [ -r | -t | -v ] [ <filename> | -e <expression> ]");return}try{if(y){p(i)}else if(d||v){u=v?f:o;console.log(JSON.stringify(u(i),void 0,2))}else{h(i)}}catch(S){r=S;if(r instanceof SyntaxError){console.error(r.message)}else{throw r}}}}else{(this.Yak!=null?this.Yak:this.Yak={}).parser=b={}}x={IDENTIFIER_CHARS:e,parse:o,stringify:m,tokenizer:g,parseForRacket:f};for(a in x){w=x[a];b[a]=w}}.call(this);!function(){var e,n,t,r,i,a,l,u,o,c,f,p,h,v,m,g,y,w,d,b,x,k,S,j,L,M,N,q,C,O,T,E,$,I,F,z,_,B,P,A,U,Y,R,H,K,D,G,J,V,X,Q,W,Z,en,nn,tn={}.hasOwnProperty,rn=function(e,n){for(var t in n){if(tn.call(n,t))e[t]=n[t]}function r(){this.constructor=e}r.prototype=n.prototype;e.prototype=new r;e.__super__=n.prototype;return e},sn=[].slice;x=typeof global!=="undefined"&&global!==null?global:this;h={};c={};z=function(e){return e[e.length-1]};q=function(e,n){var t,r;for(t in n){r=n[t];e[t]=r}return e};k=function(e,n){var t,r,i,s;if(e.type!==n.type){return false}switch(e.type){case"list":if(e.value.length!==n.value.length){return false}for(t=i=0,s=e.length;i<s;t=++i){r=e[t];if(!k(r,n[t])){return false}}return true;case"funject":return e===n;case"number":case"boolean":case"string":case"symbol":return e.value===n.value;case"nil":case"unknown":return true}};a=function(){function e(e){this.message=e}return e}();y=function(){function e(e){this.error=e}return e}();p=function(e){rn(n,e);function n(e,n){this.message=e;this.trace=n}return n}(Error);o=function(e){rn(n,e);function n(e,t){n.__super__.constructor.call(this,"No match for "+e+" applied to "+t)}return n}(a);v=function(){function e(e,n,t){var r,i;this.parent=e;if(t==null){t=true}this.vars=Object.create(null);if(n!=null){for(r in n){i=n[r];if(t){this.vars[r]=i}else{this.set(r,i)}}}}e.prototype.get=function(e){if(Object.prototype.hasOwnProperty.call(this.vars,e)){return this.vars[e]}if(this.parent){return this.parent.get(e)}throw new a("Undefined variable "+e)};e.prototype.set=function(e,n){if(this.isProxy){return this.parent.set(e,n)}else{if(n.name==null){n.name=e}return this.vars[e]=n}};e.prototype.reset=function(e,n){if(Object.prototype.hasOwnProperty.call(this.vars,e)){return this.vars[e]=n}if(this.parent){return this.parent.reset(e,n)}throw new a("Cannot reset undefined variable "+e)};return e}();r=function(){e.prototype.type="funject";e.prototype.toString=function(){var e,n;try{n=(new i).evaluate({type:"application",funject:{type:"value",value:this},argument:{type:"symbol",value:"to-string"}});if(n.isString){return n.value}else{return this.basicToString()}}catch(t){e=t;if(e instanceof p){return this.basicToString()}else{throw e}}};e.prototype.basicToString=function(){if(this.isClass){if(this.name){return"#<class "+this.name+">"}else{return"#<class>"}}else if(this.call&&this.call.length!==0){return"#<primitive>"}else{return"#<funject>"}};e.prototype.toSource=function(e){var n,t;if(e===0){return this.basicToString()}try{t=(new i).evaluate({type:"application",funject:{type:"value",value:this},argument:{type:"symbol",value:"inspect"}});if(t.isString){return t.value}else{return this.getSource()}}catch(r){n=r;if(n instanceof p){return this.getSource(e)}else{throw n}}};e.prototype.getSource=function(e){if(e===0||this.isClass||this.call&&this.call.length!==0){return this.basicToString()}else if(!this.patterns||this.patterns.length===0){return"{}"}else{return this.basicToString()}};function e(e){var n,t;this.patterns=[];if(e){for(n in e){t=e[n];this[n]=t}}}e.prototype.methodHasArgs=function(){var e,n,t,r,i,s,l,u,o,c,f;i=this;n=null;e=function(e){if(n!=null&&n!==e){throw new a("Method cannot match both [@self] and [@self, @arg]")}return n=e};while(true){if(i.call){t=0;r=i.call.length;while(t<r){u=i.call[t++];while(u==="own"||u==="interpreter"){u=i.call[t++]}if(u instanceof Array){if(u.length===1){e(false)}if(u.length===2){e(true)}}++t}}if(i.patterns){f=i.patterns;for(o=0,c=f.length;o<c;o++){s=f[o];l=s.pattern;if(l.type==="list"&&l.values.length===1){e(false)}if(l.type==="list"&&l.values.length===2){e(true)}}}if(n!=null){return n}if(!(i=i.parent)){throw new a(""+this+" is not a method")}}};e.prototype.isKindOf=function(e){var n;n=this.instance;while(n){if(n===e.$instance){return true}n=n.parent}return false};e.prototype.isMemberOf=function(e){return this.instance===e.$instance};e.prototype.hasSymbol=function(e){var n,t,r,i,s,a,l,u;n=this;while(n){if(n.call){l=n.call;for(r=0,s=l.length;r<s;r++){t=l[r];if(t==="symbol"||t[0]==="."&&e===t.substr(1)){return true}}}if(n.patterns){u=n.patterns;for(i=0,a=u.length;i<a;i++){t=u[i];if(t.pattern.type==="formal parameter"||t.pattern.type==="symbol"&&t.pattern.value===e||t.pattern.type==="identifier"&&t.scope.get(t.pattern.value).isMemberOf(F.Symbol)){return true}}}n=n.parent}return false};e.prototype.keys=function(){var e,n,t,r,i,s,u,o,c=this;r=function(e,n){var t;switch(e.type){case"list":return new l(function(){var i,s,a,l;a=e.values;l=[];for(i=0,s=a.length;i<s;i++){t=a[i];l.push(r(t,n))}return l}());case"symbol":return J(e.value);case"string":return new m(e.value);case"number":return new f(e.value);case"nil":case"unknown":return F[e.value];case"identifier":return n.get(e.value);default:throw new a(""+c+" has non-constant keys")}};i=[];if(this.patterns){o=this.patterns;for(s=0,u=o.length;s<u;s++){t=o[s];i.push(r(t.pattern,t.scope))}}if(this.call){e=0;n=this.call.length;while(e<n){t=this.call[e++];while(t==="interpreter"||t==="own"){t=this.call[e++]}if(t[0]==="."){i.push(J(t.substr(1)))}else if(t[0]==='"'){i.push(new m(t.substr(1)))}}}return new l(i)};e.prototype.keysOf=function(e){var n,t,r,i,s;t=[];s=this.keys().value;for(r=0,i=s.length;r<i;r++){n=s[r];if(n.isMemberOf(e)){t.push(n)}}return new l(t)};e.prototype.allKeys=function(){var e,n,t,r,i,s,a,u,o,c;i=[];n=this;while(n){c=n.keys().value;for(s=0,u=c.length;s<u;s++){t=c[s];e=true;for(a=0,o=i.length;a<o;a++){r=i[a];if(k(r,t)){e=false}}if(e){i.push(t)}}n=n.parent}return new l(i)};e.prototype.isObject=function(){var e,n,t,r,i;try{i=this.keys();for(t=0,r=i.length;t<r;t++){n=i[t];if(!n.isMemberOf(F.Symbol)){return false}}}catch(s){e=s;if(e instanceof a){return false}else{throw e}}return true};e.prototype["native"]=function(e,n){var t,r,i,s,a,l,u,o,c,f,p;if(e instanceof Array){if(e[0]==="|"){f=e.slice(1);for(l=0,o=f.length;l<o;l++){s=f[l];if(r=this["native"](s,n)){return r}}return false}r=[];if(!n.isList||e.length!==n.value.length){return false}p=n.value;for(i=u=0,c=p.length;u<c;i=++u){a=p[i];if(t=this["native"](e[i],a)){r=r.concat(t)}else{return false}}return r}if(e==="*"){return[n]}if(F[e]){if(n===F[e]){return[]}else{return false}}if(typeof e==="string"){if(e[0]==="."){if(n.isSymbol&&n.value===e.substr(1)){return[]}}else if(e[0]==='"'){if(n.isString&&n.value===e.substr(1)){return[]}}else if(e[0]==="&"){if(n===O.get(e.substr(1))){return[]}}else{if(n.type===e){return[n]}}return false}};e.prototype.scan=function(e,n,t,r,i){var s,l,u,o,c,f;if(r.type==="list"){if(!(i.isList&&i.value.length===r.values.length)){return false}f=r.values;for(s=o=0,c=f.length;o<c;s=++o){u=f[s];if(!(l=this.scan(e,n,t,u,i.value[s]))){return false}}return true}if(r.type==="formal parameter"){if(Object.prototype.hasOwnProperty.call(n,r.value)){return k(n[r.value],i)}n[r.value]=i;return true}if(r.type==="identifier"){return k(i,e.get(r.value))}if(r.type==="application"){t.push({funject:r.funject,argument:r.argument,value:i});return true}if(r.type==="number"||r.type==="symbol"||r.type==="string"||r.type==="boolean"){return r.type===i.type&&r.value===i.value&&true}if(r.type==="nil"||r.type==="unknown"){return r.type===i.type&&true}throw new a("Invalid pattern")};e.prototype.match=function(e,n,t,r){var i,s,l,u,o,c,f,p;if(t.type==="list"){s={};p=t.values;for(l=c=0,f=p.length;c<f;l=++c){o=p[l];if(!(u=this.match(e,n,o,r.value[l]))){return false}q(s,u)}return s}if(t.type==="application"){i=e.first().value[e.frame.arg++];if(!i.isList){throw new a("Invalid inverse")}if(!i.value.length){return false}return this.bind(i.value[0],t,{},n)}return{}};e.prototype.bind=function(e,n,t,r){var i,s,a,l;if(n.type==="list"){l=n.values;for(s=0,a=l.length;s<a;s++){i=l[s];this.bind(e,i,t,r)}}else if(n.type==="formal parameter"){if(!Object.prototype.hasOwnProperty.call(r,n.value)){t[n.value]=e}}else if(n.type==="application"){this.bind(e,n.argument,t,r)}return t};e.prototype.substitute=function(e,n){var t;if(n.type==="list"){return new l(function(){var r,i,s,a;s=n.values;a=[];for(r=0,i=s.length;r<i;r++){t=s[r];a.push(this.substitute(e,t))}return a}.call(this))}if(n.type==="number"){return new f(n.value)}if(n.type==="string"){return new m(n.value)}if(n.type==="symbol"){return J(n.value)}if(n.type==="formal parameter"){if(Object.prototype.hasOwnProperty.call(e,n.value)){return e[n.value]}return F.unknown}if(n.type==="application"){throw new a("Nested applications are unimplemented")}if(n.type==="boolean"||n.type==="nil"||n.type==="unknown"){return F[n.value]}};e.prototype.apply=function(n,t,r,i,s){var u,f,p,m,g,y,w,d,b,x,k,S,j,L,M,N,C,O,T,E,$,I,F;if(s==null){s=true}if(this.call){d=0;b=this.call.length;while(d<b){j=this.call[d++];if(L=j==="interpreter"){j=this.call[d++]}if(M=j==="own"){j=this.call[d++]}O=this.call[d++];if(m=this["native"](j,r)){if(M){m.unshift(t)}if(L){m.unshift(n)}if(h===(N=O.apply(this,m))){return}if(c!==N){return n["return"](N)}}}}if(this.patterns){p=($=n.frame.arg)!=null?$:0;k=(I=n.frame.index)!=null?I:0;F=this.patterns.slice(k);for(d=T=0,E=F.length;T<E;d=++T){S=F[d];f=[];if(n.frame.bindings){g=n.frame.bindings;f=n.frame.applications;delete n.frame.applications;delete n.frame.bindings}else{g={};if(!this.scan(S.scope,g,f,S.pattern,r)){continue}}if(f.length){if(n.frame.step==="match"){if(!(y=this.match(n,g,S.pattern,r))){delete n.frame.step;continue}q(g,y)}else if(n.frame.step==="inverse"){x=n.frame.expression;n.pop();n.stack.push({expression:{line:x.line,character:x.character,type:"reapply funject","private":i,funject:this,argument:r,own:t,instance:s},arguments:[],step:"match",applications:f,bindings:g,arg:p,index:k+d});n.push({line:S.pattern.line,character:S.pattern.character,type:"list",values:function(){var e,t,r,i;r=n.first().value;i=[];for(d=e=0,t=r.length;e<t;d=++e){u=r[d];if(!u.inverse){throw new a(""+u+" has no inverse")}i.push({type:"application",funject:{type:"value",value:u.inverse},argument:{type:"value",value:new l([f[d].value,this.substitute(g,f[d].argument)])}})}return i}.call(this)});return}else{x=n.frame.expression;n.pop();n.stack.push({expression:{line:x.line,character:x.character,type:"reapply funject","private":i,funject:this,argument:r,own:t,instance:s},arguments:[],step:"inverse",applications:f,bindings:g,arg:p,index:k+d});n.push({line:S.pattern.line,character:S.pattern.character,type:"list",values:function(){var e,n,t;t=[];for(e=0,n=f.length;e<n;e++){u=f[e];t.push(u.funject)}return t}()});return}}if(S.value){return n["return"](S.value)}else{n.pop();C=n.scope;g.own=t;if(i){g["private"]=i}n.scope=new v(S.scope,g,true);n.push({type:"set scope",scope:C});n.push(S.expression)}return}}if(s&&r.isSymbol&&this.instance&&this.instance.hasSymbol(r.value)){w=n.frame.expression;n.pop();n.pop();n.push({type:"native",value:function(){var n,i,s;i=this.first();if(i.name==null){i.name="instance."+r.value}if(i.expression){((s=this.frame).expression!=null?(s=this.frame).expression:s.expression={}).file=i.expression.file;this.frame.expression.line=i.expression.line;this.frame.expression.character=i.expression.character}n=i.methodHasArgs();this.callStack.pop();if(n){return this["return"](new e({call:["interpreter","*",function(n,r){n.pop();n.push({type:"application",file:w!=null?w.file:void 0,line:w!=null?w.line:void 0,character:w!=null?w.character:void 0,"private":t["private"]!=null?t["private"]:t["private"]=new e,funject:{type:"value",value:i},argument:{type:"value",value:new l([t,r])}});return h}]}))}else{this.pop();return this.push({type:"application",file:w!=null?w.file:void 0,line:w!=null?w.line:void 0,character:w!=null?w.character:void 0,"private":t["private"]!=null?t["private"]:t["private"]=new e,funject:{type:"value",value:i},argument:{type:"value",value:new l([t])}})}}});n.push({type:"application",file:w!=null?w.file:void 0,line:w!=null?w.line:void 0,character:w!=null?w.character:void 0,funject:{type:"value",value:this.instance},argument:{type:"value",value:r},instance:false});return}if(this.parent&&this.parent!==this){return this.parent.apply(n,t,r,i,s)}n.callStack.pop();throw new o(t,r)};e.bridge=function(n,t){var r;if(t==null){t=x}if(n==null){return F.nil}if(n instanceof Array){return new l(function(){var t,i,s;s=[];for(t=0,i=n.length;t<i;t++){r=n[t];s.push(e.bridge(r))}return s}())}switch(typeof n){case"number":return new f(n);case"string":return new m(n);case"boolean":return F[n];case"function":return new e({call:["list",function(r){return e.bridge(n.apply(t,e.unbridge(r)))},"symbol",function(t){if(t in n){return e.bridge(n[t.value],n)}return c}]});case"object":return new e({call:["symbol",function(t){if(t in n){return e.bridge(n[t.value],n)}return c}]})}};e.unbridge=function(n){var t,r,s,l,u,o,c,f,p,h,v;switch(n.type){case"nil":return null;case"unknown":throw new a("Cannot unbridge "+n.type);break;case"number":case"string":case"boolean":return n.value;case"symbol":throw new a("Cannot unbridge symbols");break;case"list":p=n.value;v=[];for(u=0,c=p.length;u<c;u++){l=p[u];v.push(e.unbridge(l))}return v;break;case"funject":if(n.isObject()){t=new i;s={};h=n.keysOf(F.Symbol).value;for(o=0,f=h.length;o<f;o++){r=h[o];s[r.value]=e.unbridge(t.evaluate({type:"application",funject:{type:"value",value:n},argument:{type:"symbol",value:r.value}}))}return s}else{return function(){return e.unbridge((new i).evaluate({type:"application",funject:{type:"value",value:n},argument:{type:"value",value:e.bridge([].slice.call(arguments))}}))}}}};return e}();G=function(e,n,t){var i,s,a,l;if(t==null){t=r}i=[];if(n){l=function(e){return i.push("."+s,function(){return e})};for(s in n){a=n[s];l(a)}}return new t({call:i,parent:e})};D=function(e,n){return new r({call:[e,n]})};K=function(e,n,i){var s,a,u,o,c,f,p,h;p=i!=null?i:{},a=p.exports,u=p.instance,f=p._instance;o=f!=null?f:G(n!=null?n.$instance:void 0,u);o.isInstance=true;c=G(n,a!=null?a:{},t);if(n==null){delete c.parent}c.$instance=o;c.$super=n;c.$subclasses=new l([]);if(n){n.$subclasses.value.push(c)}c.instance=((h=F.Class)!=null?h:c).$instance;c.name=e;s="to-"+e.toLowerCase();(c.call!=null?c.call:c.call=[]).unshift("interpreter",["*"],function(e,n){return{lazy:{type:"application",funject:{type:"value",value:n},argument:{type:"symbol",value:s}}}});c.inverse=new r({call:[["*",["unknown"]],function(e){var n;n=e.instance;while(n){if(n===o){return new l([e])}n=n.parent}return new l([])}]});F[e]=c;return c};H=function(e){return F[!!e]};J=function(e){if(Object.prototype.hasOwnProperty.call(g.instances,e)){return g.instances[e]}else{return g.instances[e]=new g(e)}};F={};e=G(null,{initialize:D(["*"],function(e){return F.nil}),"append!":D(["*",["*","*"]],function(e,n,t){(e.patterns!=null?e.patterns:e.patterns=[]).push({pattern:{type:"identifier",value:"k"},scope:new v(null,{k:n}),value:t});return F.nil}),"insert!":D(["*",["number","*","*"]],function(e,n,t,r){n=n.value;if(n<0){n=e.patterns?e.patterns.length+n:n}if(n%1!==0||n<0||(e.patterns?n>e.patterns.length:n>0)){throw new a("Cannot insert at "+n)}(e.patterns!=null?e.patterns:e.patterns=[]).splice(n,0,{pattern:{type:"identifier",value:"k"},scope:new v(null,{k:t}),value:r});return F.nil}),clone:D(["*"],function(e){return new r({parent:e})}),name:D(["*"],function(e){if(e.name){return new m(e.name)}else{return F.nil}}),apply:new r({call:["interpreter",["*",["*"]],function(e,n,t){e.pop();e.push({type:"application",funject:{type:"value",value:n},argument:{type:"value",value:t}});return h}]}),on:new r({call:["interpreter",["*","*"],function(e,n,t){e.pop();e.push({type:"application",funject:{type:"value",value:t},argument:{type:"value",value:n}});return h}]}),then:new r({call:["interpreter",["*",["*"]],function(e,n,t){e.pop();e.push({type:"application",funject:{type:"value",value:t},argument:{type:"value",value:n}});return h}]}),is:D(["*","*"],function(e,n){return H(e===n)}),isnt:D(["*","*"],function(e,n){return H(e!==n)}),"==":D(["*","*"],function(e,n){return H(k(e,n))}),"!=":D(["*","*"],function(e,n){return H(!k(e,n))}),"symbol?":D(["*"],function(e){return H(e.isSymbol)}),"string?":D(["*"],function(e){return H(e.isString)}),"number?":D(["*"],function(e){return H(e.isNumber)}),"list?":D(["*"],function(e){return H(e.isList)}),"boolean?":D(["*"],function(e){return H(e.isBoolean)}),"nil?":D(["*"],function(e){return H(e.isNil)}),"unknown?":D(["*"],function(e){return H(e.isUnknown)}),"class?":D(["*"],function(e){return H(e.isClass)}),"integer?":D(["*"],function(e){return H(e.isNumber&&e.isInteger())}),"float?":D(["*"],function(e){return H(e.isNumber&&e.isFloat())}),"member-of?":D(["*",["class"]],function(e,n){return H(e.isMemberOf(n))}),"kind-of?":D(["*",["class"]],function(e,n){return H(e.isKindOf(n))}),"to-string":D(["*"],function(e){if(e.type==="funject"||e.type==="class"){return new m(r.prototype.basicToString.call(e))}else{return new m(""+e)}}),"to-symbol":D(["*"],function(e){return J(e+"")}),"to-boolean":D(["*"],function(e){return H(e!==F.nil&&e!==F.unknown&&e!==F["false"])}),"to-number":D(["*"],function(e){var n;n=e+"";if(+n!==+n){throw new a("Cannot convert "+e+" to a number")}return new f(+n)}),"to-error":new r({call:["interpreter",["*"],function(e,n){return e.createError(""+n)}]}),inspect:D(["*"],function(e){if(e.type==="funject"||e.type==="class"){return new m(e.getSource(-1))}else{return new m(e.toSource())}}),"has?":D(["*",["*"]],function(e,n){var t,r,i,s;s=e.keys().value;for(r=0,i=s.length;r<i;r++){t=s[r];if(k(t,n)){return F["true"]}}return F["false"]}),keys:D(["*"],function(e){return e.keys()}),"keys-of":D(["*",["class"]],function(e,n){return e.keysOf(n)}),"all-keys":D(["*"],function(e){return e.allKeys()}),each:new r({call:["interpreter",["funject",["funject"]],function(e,n,t){var r,i,s,a;a=function(){return e.push({type:"application",funject:{type:"value",value:t},argument:{type:"list",values:[{type:"value",value:s[i]},{type:"application",funject:{type:"value",value:n},argument:{type:"value",value:s[i]}}]}})};i=0;s=n.keys().value;r=s.length;if(r===0){return F.nil}e.pop();e.push({type:"native",value:function(){++i;if(i===r){return this["return"](new l(this.frame["arguments"]))}return a()}});a();return h}]})});r.prototype.instance=e;e.instance=null;t=function(e){rn(n,e);function n(){en=n.__super__.constructor.apply(this,arguments);return en}n.prototype.type="class";n.prototype.isClass=true;n.prototype.create=function(){return new r({instance:this.$instance})};return n}(r);l=function(e){rn(n,e);n.prototype.type="list";n.prototype.isList=true;n.prototype.copy=function(){return new n(this.value)};function n(e){this.value=e}n.prototype.toString=function(){var e;
return"["+function(){var n,t,r,i;r=this.value;i=[];for(n=0,t=r.length;n<t;n++){e=r[n];i.push(e.toSource(4))}return i}.call(this).join(", ")+"]"};n.prototype.toSource=function(e){var n;if(e<=0){return"[...]"}else{return"["+function(){var t,r,i,s;i=this.value;s=[];for(t=0,r=i.length;t<r;t++){n=i[t];s.push(n.toSource(e-1))}return s}.call(this).join(", ")+"]"}};n.prototype.call=["own",["number"],function(e,n){var t;t=n.value<0?e.value.length+n.value:n.value;if(t<0||t>=e.value.length){throw new a("Cannot access "+e+" at "+n)}return e.value[t]},".class",function(){return F.List}];return n}(r);K("Class",null,{instance:{superclass:D(["class"],function(e){var n;return(n=e.$super)!=null?n:F.nil}),subclasses:D(["class"],function(e){return e.$subclasses.copy()}),instance:D(["class"],function(e){return e.$instance}),methods:D(["class"],function(e){return e.$instance.keysOf(F.Symbol)}),"all-methods":D(["class"],function(e){return e.$instance.allKeys(true)})}});t.prototype.parent=G(null,{"class":F.Class});t.prototype.instance=F.Class.$instance;F.Class.$instance.parent=e;K("Funject",null,{_instance:e});F.Class.$super=F.Funject;F.Funject.$subclasses.value.push(F.Class);r.prototype.parent=G(null,{"class":F.Funject});K("Symbol",F.Funject,{instance:{}});K("String",F.Funject,{instance:{initialize:D(["string",["string"]],function(e,n){if(e.value!=null){throw new a(""+e+" is immutable")}return e.value=n.value}),length:D(["string"],function(e){return new f(e.value.length)}),"+":new r({call:[["string","string"],function(e,n){return new m(e.value+n.value)}],inverse:new r({call:[["string",["unknown","string"]],function(e,n){if(n.value!==e.value.slice(-n.value.length)){return new l([])}else{return new l([new m(e.value.slice(0,-n.value.length))])}},["string",["string","unknown"]],function(e,n){if(n.value!==e.value.slice(0,n.value.length)){return new l([])}else{return new l([new m(e.value.slice(n.value.length))])}}]})}),"*":D(["string","number"],function(e,n){return e.repeat(n)}),"contains?":D(["string",["string"]],function(e,n){return H(-1!==e.value.indexOf(n.value))}),replace:D(["string",["string","string"]],function(e,n,t){return new m(e.value.split(n.value).join(t.value))}),"replace-first":D(["string",["string","string"]],function(e,n,t){return new m(e.value.replace(n.value,t.value))})}});E=new r({call:[["number",["unknown"]],function(e){if(e.isInteger()){return new l([e])}else{return new l([])}}]});K("Number",F.Funject,{exports:{random:new r({call:[[],function(){return new f(Math.random())},["number"],function(e){if(!e.isInteger()){throw new a("Cannot generate random["+e+"]")}return new f(Math.floor(Math.random()*e.value))},["number","number"],function(e,n){if(!e.isInteger()||!n.isInteger()||n.value<=e.value){throw new a("Cannot generate random["+e+", "+n+"]")}return new f(e.value+Math.floor(Math.random()*(n.value-e.value)))}]})},instance:{"degrees-to-radians":D(["number"],function(e){return new f(e.value*Math.PI/180)}),"radians-to-degrees":D(["number"],function(e){return new f(e.value*180/Math.PI)}),max:D(["number",["number"]],function(e,n){return new f(e.value>n.value?e.value:n.value)}),min:D(["number",["number"]],function(e,n){return new f(e.value<n.value?e.value:n.value)}),sqrt:D(["number"],function(e){if(e.value<0){throw new a("Cannot compute "+e+".sqrt")}return new f(Math.sqrt(e.value))}),root:D(["number",["number"]],function(e,n){return new f(Math.pow(e.value,1/n.value))}),ln:D(["number"],function(e){return new f(Math.log(e.value))}),log:D(["number",["number"]],function(e,n){return new f(Math.log(e.value)/Math.log(n.value))}),sin:D(["number"],function(e){return new f(Math.sin(e.value))}),cos:D(["number"],function(e){return new f(Math.cos(e.value))}),tan:D(["number"],function(e){return new f(Math.tan(e.value))}),sec:D(["number"],function(e){return new f(1/Math.cos(e.value))}),csc:D(["number"],function(e){return new f(1/Math.sin(e.value))}),cot:D(["number"],function(e){return new f(1/Math.tan(e.value))}),asin:D(["number"],function(e){return new f(Math.asin(e.value))}),acos:D(["number"],function(e){return new f(Math.acos(e.value))}),atan:D(["number"],function(e){return new f(Math.atan(e.value))}),"atan/":D(["number",["number"]],function(e,n){return new f(Math.atan2(e.value,n.value))}),asec:D(["number"],function(e){return new f(Math.acos(1/e))}),acsc:D(["number"],function(e){return new f(Math.asin(1/e))}),acot:D(["number"],function(e){return new f(Math.atan(1/e))}),sinh:D(["number"],function(e){return new f((Math.exp(e.value)-Math.exp(-e.value))/2)}),cosh:D(["number"],function(e){return new f((Math.exp(e.value)+Math.exp(-e.value))/2)}),tanh:D(["number"],function(e){return new f((Math.exp(e.value*2)-1)/(Math.exp(e.value*2)+1))}),coth:D(["number"],function(e){return new f((Math.exp(e.value*2)+1)/(Math.exp(e.value*2)-1))}),sech:D(["number"],function(e){return new f(2/(Math.exp(e.value)+Math.exp(-e.value)))}),csch:D(["number"],function(e){return new f(2/(Math.exp(e.value)-Math.exp(-e.value)))}),asinh:D(["number"],function(e){return new f(Math.log(e.value+Math.sqrt(e.value*e.value+1)))}),acosh:D(["number"],function(e){return new f(Math.log(e.value+Math.sqrt(e.value*e.value-1)))}),atanh:D(["number"],function(e){return new f(Math.log((1+e.value)/(1-e.value))/2)}),acoth:D(["number"],function(e){return new f(Math.log((1-e.value)/(1+e.value))/2)}),asech:D(["number"],function(e){return new f(Math.log(1/e.value+Math.sqrt(1-e.value*e.value)/e.value))}),acsch:D(["number"],function(e){return new f(Math.log(1/e.value+Math.sqrt(1+e.value*e.value)/Math.abs(e.value)))}),abs:new r({call:[["number"],function(e){return new f(e.value<0?-e.value:e.value)}],inverse:new r({call:[["number",["unknown"]],function(e){return new l([new f(e.value),new f(-e.value)])}]})}),ceil:new r({call:[["number"],function(e){return new f(Math.ceil(e.value))}],inverse:E}),floor:new r({call:[["number"],function(e){return new f(Math.floor(e.value))}],inverse:E}),round:new r({call:[["number"],function(e){return new f(Math.round(e.value))}],inverse:E}),"to-fixed":new r({call:[["number",["number"]],function(e,n){if(n.value<0||n.value>20){throw new a("Cannot convert "+e+".to-fixed["+n+"]")}return new m(e.value.toFixed(n.value))}],inverse:E}),"to-pennies":new r({call:[["number"],function(e){return new f(Math.round(e.value*100))}],inverse:new r({call:[["number",["unknown"]],function(e){if(e.isInteger()){return new l([new f(Math.round(e.value)/100)])}else{return new l([])}}]})}),"to-dollars":new r({call:[["number"],function(e){return new f(Math.round(e.value)/100)}],inverse:new r({call:[["number",["unknown"]],function(e){if(e.isInteger()){return new l([new f(Math.round(e.value)/100)])}else{return new l([])}}]})}),times:new r({call:["interpreter",["number",["*"]],function(e,n,t){var r,i;if(!n.isInteger()||n.value<0){throw new a("Cannot "+n+".times[...]")}i=0;r=n.value;if(r===0){return new l([])}e.pop();e.push({type:"native",value:function(){++i;if(i===r){return this["return"](new l(this.frame["arguments"]))}return this.push({type:"application",funject:{type:"value",value:t},argument:{type:"value",value:new l([new f(i)])}})}});e.push({type:"application",funject:{type:"value",value:t},argument:{type:"value",value:new l([new f(i)])}});return h}]}),upto:D(["number",["number"]],function(e,n){var t;if(n.value<e.value){return new l([])}else{return new l(function(){var r,i,s,a;a=[];for(t=r=i=e.value,s=n.value;i<=s?r<=s:r>=s;t=i<=s?++r:--r){a.push(new f(t))}return a}())}}),downto:D(["number",["number"]],function(e,n){var t;if(n.value>e.value){return new l([])}else{return new l(function(){var r,i,s,a;a=[];for(t=r=i=e.value,s=n.value;i<=s?r<=s:r>=s;t=i<=s?++r:--r){a.push(new f(t))}return a}())}}),"+":new r({call:[["number","number"],function(e,n){return new f(e.value+n.value)}],inverse:new r({call:[["number",["|",["number","unknown"],["unknown","number"]]],function(e,n){return new l([new f(e.value-n.value)])}]})}),"-":new r({call:[["number","number"],function(e,n){return new f(e.value-n.value)}],inverse:new r({call:[["number",["number","unknown"]],function(e,n){return new l([new f(n.value-e.value)])},["number",["unknown","number"]],function(e,n){return new l([new f(e.value+n.value)])}]})}),"*":new r({call:[["number","number"],function(e,n){return new f(e.value*n.value)},["number","string"],function(e,n){return n.repeat(e)}],inverse:new r({call:[["number",["|",["number","unknown"],["unknown","number"]]],function(e,n){return new l([new f(e.value/n.value)])}]})}),"/":new r({call:[["number","number"],function(e,n){return new f(e.value/n.value)}],inverse:new r({call:[["number",["number","unknown"]],function(e,n){return new l([new f(n.value/e.value)])},["number",["unknown","number"]],function(e,n){return new l([new f(e.value*n.value)])}]})}),"%":D(["number","number"],function(e,n){var t;t=e.value%n.value;if(t<0){t+=n.value}return new f(t)}),"^":new r({call:[["number","number"],function(e,n){return new f(Math.pow(e.value,n.value))}],inverse:new r({call:[["number",["number","unknown"]],function(e,n){return new l([new f(Math.log(e.value)/Math.log(n.value))])},["number",["unknown","number"]],function(e,n){return new l([new f(Math.pow(e.value,1/n.value))])}]})}),">":D(["number","number"],function(e,n){return H(e.value>n.value)}),"<":D(["number","number"],function(e,n){return H(e.value<n.value)}),">=":D(["number","number"],function(e,n){return H(e.value>=n.value)}),"<=":D(["number","number"],function(e,n){return H(e.value<=n.value)})}});F.Number.call.unshift(".e",function(){return new f(Math.E)},".pi",function(){return new f(Math.PI)});K("List",F.Funject,{instance:{"to-list":D(["list"],function(e){return e}),"empty?":D(["list"],function(e){return H(e.value.length===0)}),length:D(["list"],function(e){return new f(e.value.length)}),copy:D(["list"],function(e){return new l(e.value.slice(0))}),"delete-at!":D(["list",["number"]],function(e,n){if(n<0){n+=e.value.length}if(n<0&&n>=e.value.length){throw new a("Cannot delete at "+n+" of "+e)}e.value.splice(n,1);return e}),"insert!":D(["list",["number","*"]],function(e,n,t){n=n.value;if(n<0){n+=e.value.length}if(n<0&&n>e.value.length){throw new a("Cannot insert at "+n+" of "+e)}e.value.splice(n,0,t);return e}),"sort!":new r({call:[["list",[]],function(e){e.value.sort(function(e,n){return(""+e).localeCompare(""+n)});return e},"interpreter",["list",["funject"]],function(e,n,t){var r,i,s;i=0;s=n.value.slice(0);r=s.length;if(r===0){return new l([])}e.pop();e.push({type:"native",value:function(){var e;++i;if(i===r){e=this.frame["arguments"];s.sort(function(n,t){return e[s.indexOf(n)]-e[s.indexOf(t)]});n.value=s;return this["return"](n)}return this.push({type:"application",funject:{type:"value",value:t},argument:{type:"value",value:new l([s[i]])}})}});e.push({type:"application",funject:{type:"value",value:t},argument:{type:"value",value:new l([s[i]])}});return h}]}),"map!":new r({call:["interpreter",["list",["funject"]],function(e,n,t){var r,i,s;i=0;s=n.value.slice(0);r=s.length;if(r===0){return n}e.pop();e.push({type:"native",value:function(){while(true){if(!this.arg(i,{type:"application",funject:{type:"value",value:t},argument:{type:"value",value:new l([s[i]])}})){return}++i;if(i===r){n.value=this.frame["arguments"];return this["return"](n)}}}});return h}]}),"filter!":new r({call:["interpreter",["list",["funject"]],function(e,n,t){var r,i,s,u;i=0;s=n.value.slice(0);r=s.length;if(r===0){return n}u=[];e.pop();e.push({type:"native",value:function(){var e;while(true){if(!this.arg(i,{type:"application",funject:{type:"value",value:t},argument:{type:"value",value:new l([s[i]])}})){return}e=this.frame["arguments"][this.frame["arguments"].length-1];if(!e.isBoolean){throw new a("Cannot filter on "+e)}if(e.value){u.push(s[i])}++i;if(i===r){return this["return"](new l(u))}}}});return h}]}),each:new r({call:["interpreter",["list",["funject"]],function(e,n,t){var r,i,s;i=0;s=n.value.slice(0);r=s.length;if(r===0){return F.nil}e.pop();e.push({type:"native",value:function(){while(true){if(!this.arg(i,{type:"application",funject:{type:"value",value:t},argument:{type:"value",value:new l([s[i]])}})){return}++i;if(i===r){return this["return"](F.nil)}}}});return h}]})}});l.prototype.instance=F.List.$instance;K("Boolean",F.Funject,{instance:{not:new r({call:[["boolean"],function(e){return H(!e.value)}],inverse:new r({call:[["boolean",["unknown"]],function(e){return new l([H(!e.value)])}]})}),and:D(["boolean","boolean"],function(e,n){return H(e.value&&n.value)}),or:D(["boolean","boolean"],function(e,n){return H(e.value||n.value)}),xor:D(["boolean","boolean"],function(e,n){return H(e.value!==n.value)})}});K("Nil",F.Funject);K("Unknown",F.Funject);K("Error",F.Funject,{exports:{"new":new r({call:["interpreter",["*"],function(e,n){return e.createError(""+n)}]})},instance:{initialize:new r({call:["interpreter",["*",["string"]],function(e,n,t){if(n.value!=null){throw new a(""+n+" is immutable")}n.value=t.value;return n.stack=e.stackTrace()}]}),inspect:D(["*"],function(e){return new m("#<Error: "+e.value+"\n"+e.stack+">")}),"to-string":D(["*"],function(e){return new m(e.value+"\n"+e.stack)}),"to-error":D(["*"],function(e){return e}),message:D(["*"],function(e){return new m(e.value)})}});g=function(e){rn(n,e);n.instances={};n.prototype.instance=F.Symbol.$instance;n.prototype.type="symbol";n.prototype.isSymbol=true;function n(e){this.value=e}n.prototype.toString=function(){return this.value};n.prototype.toSource=function(){return"."+this.value};n.prototype.call=[".class",function(){return F.Symbol}];return n}(r);m=function(e){rn(n,e);n.prototype.instance=F.String.$instance;n.prototype.type="string";n.prototype.isString=true;function n(e){this.value=e}n.prototype.call=["own",["number"],function(e,t){var r;r=t.value<0?e.value.length+t.value:t.value;if(r<0||r>=e.value.length){return F.nil}else{return new n(e.value.charAt(r))}},".class",function(){return F.String}];n.prototype.repeat=function(e){if(!e.isInteger()||e.value<0){throw new a("Cannot create "+s.toSource()+" * "+e)}return new n(Array(e.value+1).join(this.value))};n.prototype.toString=function(){return this.value};n.prototype.toSource=function(){return"'"+this.value.replace(/[\\]/g,"\\\\").replace(/'/g,"\\'").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")+"'"};return n}(r);f=function(e){rn(n,e);n.prototype.instance=F.Number.$instance;n.prototype.type="number";n.prototype.isNumber=true;n.prototype.isInteger=function(){return this.value%1===0};n.prototype.isFloat=function(){return this.value%1!==0};function n(e){this.value=e}n.prototype.toString=function(){return""+this.value};n.prototype.toSource=function(){return""+this.value};n.prototype.valueOf=function(){return this.value};n.prototype.call=[".class",function(){return F.Number}];return n}(r);n=function(e){rn(n,e);n.prototype.instance=F.Boolean.$instance;n.prototype.type="boolean";n.prototype.isBoolean=true;function n(e){this.value=!!e}n.prototype.toString=function(){return""+this.value};n.prototype.toSource=function(){return""+this.value};n.prototype.call=[".class",function(){return F.Boolean}];return n}(r);F.nil=new r({instance:F.Nil.$instance,type:"nil",isNil:true,toString:function(){return"nil"},toSource:function(){return"nil"}});F.unknown=new r({instance:F.Unknown.$instance,type:"unknown",isUnknown:true,toString:function(){return"unknown"},toSource:function(){return"unknown"}});F["true"]=new n(true);F["false"]=new n(false);O=new(function(e){rn(n,e);n.prototype.name="<global scope>";function n(){n.__super__.constructor.call(this,null,F)}n.prototype.get=function(e){var t;try{return n.__super__.get.call(this,e)}catch(i){t=i;if(Object.prototype.hasOwnProperty.call(x,e)){return r.bridge(x[e])}else if(e==="require"&&typeof module!=="undefined"&&module!==null){return r.bridge(require)}else{throw t}}};return n}(v));nn=["^","*","/","%","+","-","==","!=","<",">","<=",">=","is","isnt"];for(X=0,W=nn.length;X<W;X++){B=nn[X];O.set(B,J(B))}O.set("by",D(["symbol"],function(e){return D(["*"],function(n){return{lazy:{type:"application",funject:{type:"value",value:n},argument:{type:"value",value:e}}}})}));O.set("import",new r({call:["interpreter",["string"],function(e,n){var t,i;try{n=require("fs").readFileSync(n.value).toString()}catch(s){throw new a("Cannot import "+n)}i=P.parse(n);e.pop();t=e.scope;e.push({type:"native",value:function(){var e;e=this.scope.vars.exports;this.scope=t;return this["return"](e)}});e.scope=new v(null,{exports:new r});e.push(i);return h}]}));O.set("error",new r({call:["interpreter",["*"],function(e,n){e.pop();e.pop();e.callStack.pop();throw new a(""+n);return h}]}));O.set("throw",new r({call:["interpreter",["*"],function(e,n){var t,r;r=e.frame.expression;e.pop();t={type:"application",file:r!=null?r.file:void 0,line:r!=null?r.line:void 0,character:r!=null?r.character:void 0,funject:{type:"value",value:n},argument:{type:"symbol",value:"to-error"}};e.push({type:"native",value:function(){if(!this.args(t)){return}e.pop();e.pop();e.callStack.pop();throw new y(this.first())}});return h}]}));O.set("print",new r({call:[["*"],function(e){V.print(""+e);return F.nil}]}));O.set("inspect",new r({call:[["*"],function(e){V.print(e.toSource(-1));return F.nil}]}));I=function(e){return this["return"](F[e.type])};R=function(e){return this["return"](this.scope.get(e.value))};_=function(e){var n,t;if(!this.args(e.left)){return}n=this.first();if(!n.isBoolean){throw new a("Non-boolean applied to #"+e.type)}if(e.type==="and"?!n.value:n.value){return this["return"](H(e.type==="or"))}if(!this.args(e.left,e.right)){return}t=this.second();if(!t.isBoolean){throw new a("#"+e.type+" applied to non-boolean")}return this["return"](H(t.value))};U=function(e){return function(n){e.call(this,n);if(this.frame["arguments"].length){return this["return"](this.first())}else{return this.pop()}}};i=function(){function e(){}e.prototype.expressions={number:function(e){return this["return"](new f(e.value))},symbol:function(e){return this["return"](J(e.value))},string:function(e){return this["return"](new m(e.value))},"boolean":function(e){return this["return"](F[e.value])},nil:I,unknown:I,value:function(e){return this["return"](e.value)},"pop scope":U(function(e){return this.scope=this.scope.parent}),"set scope":U(function(e){return this.scope=e.scope}),"pop call stack":U(function(){return this.callStack.pop()}),"pop catch stack":U(function(){return this.catchStack.pop()}),"ignore arguments":function(){return this.pop()},"reapply funject":function(e){return e.funject.apply(this,e.own,e.argument,e["private"],e.instance)},"native":function(e){return e.value.call(this,e)},sequence:function(e){if(this.frame["arguments"].length===0){this.scope=new v(this.scope);this.scope.isProxy=e.isProxy;this.scope.name="<sequence>";this.scope.line=e.line;this.scope.character=e.character}if(!this.args.apply(this,e.expressions)){return}this.popScope();return this["return"](z(this.frame["arguments"]))},assignment:function(e){var n;switch(e.operator){case"inverse assignment":if(!this.args(e.left,e.right)){return}this.first().inverse=this.second();return this["return"](this.first());case"inheritance assignment":if(!this.args(e.left,e.right)){return}this.first().parent=this.second();return this["return"](this.first())}if(e.left.type==="identifier"){switch(e.operator){case"strict assignment":if(!this.args(e.right)){return}this.scope.set(e.left.value,this.first());return this["return"](this.first());case"reset strict assignment":if(!this.args(e.right)){return}this.scope.reset(e.left.value,this.first());return this["return"](this.first());case"lazy assignment":this.scope.set(e.left.value,{lazy:e.right,scope:this.scope});return this["return"](F.nil);case"reset lazy assignment":this.scope.reset(e.left.value,{lazy:e.right,scope:this.scope});return this["return"](F.nil)}}if(e.left.type==="application"){if(!this.args(e.left.funject)){return}n=this.first();if(n.isInstance&&!V.allowClassRedefinition){throw new a("Cannot modify class definition")}if(e.operator!=="lazy assignment"&&this.frame["arguments"].length===1){this.push(e.right);return}(n.patterns!=null?n.patterns:n.patterns=[]).unshift(e.operator==="lazy assignment"?{pattern:e.left.argument,expression:e.right,scope:this.scope}:{pattern:e.left.argument,value:this.second(),scope:this.scope});return this["return"](e.operator==="lazy assignment"?F.nil:this.second())}throw new a("Unimplemented: "+e.operator)},identifier:R,"formal parameter":R,list:function(e){if(!this.args.apply(this,e.values)){return}return this["return"](new l(this.frame["arguments"]))},funject:function(e){var n,t;n=new r;n.expression=e;n.patterns=function(){var n,r,i,s;i=e.patterns;s=[];for(n=0,r=i.length;n<r;n++){t=i[n];s.push({pattern:t.pattern,expression:t.value,scope:this.scope})}return s}.call(this);return this["return"](n)},"if":function(e){var n,t;if(!this.args(e.condition,{type:"application",funject:{type:"value",value:this.first()},argument:{type:"symbol",value:"to-boolean"}})){return}n=this.second();if(n!==F["true"]&&n!==F["false"]){throw new a("Cannot convert "+this.first()+" to boolean")}if(!this.args(0,0,n===F["true"]?e.trueBody:(t=e.falseBody)!=null?t:{type:"nil"})){return}return this["return"](this.third())},"try":function(e){this.pop();if(e["finally"]){this.push(e["finally"]);this.push({type:"ignore arguments"})}this.catchStack.push({index:this.stack.length,callIndex:this.callStack.length,expression:e,scope:this.scope});this.push({type:"pop catch stack"});return this.push(e.body)},module:function(e){var n,t,i;i=e.parent!=null;if(i&&!this.args(e.parent)){return}n=i?1:0;if(this.frame["arguments"].length===n){this.frame["super"]=i?this.first():F.Funject;this.push({type:"pop scope"});this.scope=this.frame.scope=new v(this.scope,{exports:new r({parent:this.frame["super"]}),"super":this.frame["super"]},true);if(i){this.args(e.parent,e.body)}else{this.args(e.body)}return}t=this.frame.scope.vars.exports;t.parent=this.frame["super"];return this["return"](t)},"class":function(e){var n,i,s,u,o,c,f;if((i=this.stack[this.stack.length-2].expression)&&i.type==="assignment"&&i.left.type==="identifier"){this.frame.name=i.left.value}else{this.frame.name="<class>"}c=e.parent!=null;if(c&&!this.args(e.parent)){return}n=c?1:0;if(this.frame["arguments"].length===n){this.frame["super"]=c?this.first():F.Funject;if(!this.frame["super"].isClass){throw new a("Cannot inherit from "+this.frame["super"])}this.push({type:"pop scope"});this.scope=this.frame.scope=new v(this.scope,{exports:new t({parent:this.frame["super"],name:this.frame.name,expression:e}),"super":this.frame["super"],instance:new r({parent:this.frame["super"].$instance})},true);e.body.isProxy=true;if(c){this.args(0,e.body)}else{this.args(e.body)}return}s=this.frame.scope.vars.exports;s.parent=this.frame["super"];s.$super=this.frame["super"];s.$subclasses=new l([]);this.frame["super"].$subclasses.value.push(s);o=s.$instance=this.frame.scope.vars.instance;o.isInstance=true;o.name=""+this.frame.name+".instance";o.expression=e;o.parent=this.frame["super"].$instance;f=G(null,{"class":s});u=new r({call:["interpreter","symbol",function(e,n){var t;t=e.frame.expression;e.pop();e.push({type:"native",value:function(){var e;if(!this.args({type:"application",funject:{type:"value",value:o},argument:{type:"value",value:n}})){return}e=this.first();if(e.name==null){e.name="instance."+n.value}return this["return"](new r({call:["interpreter",["|",["*"],["*","*"]],function(n,i,s){n.pop();n.pop();n.callStack.pop();n.push({type:"application",file:t!=null?t.file:void 0,line:t!=null?t.line:void 0,character:t!=null?t.character:void 0,funject:{type:"value",value:e},argument:{type:"value",value:new l(s?[i,s]:[i])},"private":i["private"]!=null?i["private"]:i["private"]=new r});return h}]}))}});return h}]});(s.call!=null?s.call:s.call=[]).unshift(".instance",function(){return u},"interpreter",".new",function(e){var n;n=e.frame.expression;e.pop();e.pop();e.callStack.pop();e.push({type:"native",value:function(){var e,t,i,s;i={type:"application",file:n!=null?n.file:void 0,line:n!=null?n.line:void 0,character:n!=null?n.character:void 0,instance:false,funject:{type:"value",value:o},argument:{type:"symbol",value:"initialize"}};if(!this.args(i)){return}t=this.first();if(t.name==null){t.name="instance.initialize"}e=t.methodHasArgs();s=new r({parent:f,instance:o});if(e){return this["return"](new r({call:["interpreter","*",function(e,i){e.pop();e.push({type:"value",value:s});e.push({type:"application",file:n!=null?n.file:void 0,line:n!=null?n.line:void 0,character:n!=null?n.character:void 0,"private":s["private"]!=null?s["private"]:s["private"]=new r,funject:{type:"value",value:t},argument:{type:"value",value:new l([s,i])}});return h}]}))}else{this.pop();this.push({type:"value",value:s});return this.push({type:"application",file:n!=null?n.file:void 0,line:n!=null?n.line:void 0,character:n!=null?n.character:void 0,"private":s["private"]!=null?s["private"]:s["private"]=new r,funject:{type:"value",value:t},argument:{type:"value",value:new l([s])}})}}});return h});return this["return"](s)},application:function(e){var n,t,r;if(!this.args(e.funject,e.argument)){return}if(this.frame["arguments"].length>2){return this["return"](this.frame["arguments"][2])}t=this.first();n=this.second();this.stack.splice(this.stack.length-1,0,{expression:{type:"pop call stack"},arguments:[]});this.callStack.push({expression:e,name:t.name});return t.apply(this,(r=e.own)!=null?r:t,n,e["private"],e.instance)},or:_,and:_};e.prototype.load=function(e){this.scope=O;this.stack=[{arguments:[]}];this.callStack=[];this.catchStack=[];e.isProxy=true;this.push(e);return this};e.prototype.evaluate=function(e){this.load(e);while(this.stack.length>1){this.step()}return z(this.stack[0]["arguments"])};e.prototype.step=function(e){var n,t,r,i,s;if(this.stack.length===1){return true}this.frame=z(this.stack);try{this.expression()}catch(l){t=l;if(t instanceof a||t instanceof y){r=(s=t.error)!=null?s:this.createError(t.message);while(this.catchStack.length){n=this.catchStack.pop();try{i=n.scope.get(n.expression["class"].value)}catch(l){}if(i&&r.isKindOf(i)){this.stack=this.stack.slice(0,+(n.index-1)+1||9e9);this.callStack=this.callStack.slice(0,+(n.callIndex-1)+1||9e9);if(n.expression.name){this.scope=new v(n.scope);this.scope.set(n.expression.name.value,r)}else{this.scope=n.scope}this.push(n.expression["catch"]);return}}throw new p(r.value,r.value+"\n"+r.stack)}else{if(typeof require!=="undefined"&&require!==null){console.log(require("util").inspect(this.stack,{depth:5}))}throw t}}return false};e.prototype.stackTrace=function(){var e,n,t,r,i,s,a,l;i="";e=this.callStack.slice(0);e.push({expression:this.frame.expression});r=null;for(s=0,a=e.length;s<a;s++){l=e[s],n=l.expression,t=l.name;if(r){if(n.file){i="\n at "+r+" ("+n.file+":"+n.line+":"+n.character+")"+i}else{i="\n at "+r+i}}else{if(n.file){i="\n at "+n.file+":"+n.line+":"+n.character+i}else{i="\n at <anonymous>"+i}}r=t}return i.substr(1)};e.prototype.createError=function(e){var n;n=F.Error.create();n.value=e;n.stack=this.stackTrace();return n};e.prototype.value=function(){return z(this.stack[0]["arguments"])};e.prototype.arg=function(e,n){var t,r;if(e>this.frame["arguments"].length){throw new TypeError("Invalid arg(..) offset "+e)}if(e===this.frame["arguments"].length){this.push(n);return false}if((t=this.frame["arguments"][e]).lazy){this.frame["arguments"].pop();r=this.scope;this.push({type:"set scope",scope:r});this.scope=t.scope;this.push(t.lazy);return false}return true};e.prototype.args=function(){var e,n;e=1<=arguments.length?sn.call(arguments,0):[];n=this.frame["arguments"].length;if(n&&this.frame["arguments"][n-1].lazy){this.arg(n-1,e[n-1]);return false}if(n<e.length){this.push(e[n]);return false}return true};e.prototype.expression=function(){var e;e=this.frame.expression;if(this.expressions[e.type]==null){throw new Error("Invalid expression type "+e.type)}return this.expressions[e.type].call(this,e)};e.prototype["return"]=function(e){this.stack.pop();return z(this.stack)["arguments"].push(e)};e.prototype.push=function(e){return this.stack.push({expression:e,arguments:[]})};e.prototype.pop=function(){return this.stack.pop()};e.prototype.popScope=function(){return this.scope=this.scope.parent};e.prototype.first=function(e){return this.frame["arguments"][0]};e.prototype.second=function(e){return this.frame["arguments"][1]};e.prototype.third=function(e){return this.frame["arguments"][2]};return e}();j=function(e,n,t){return(new i).evaluate(P.parse(e,n,t))};u=1e3;S=function(e,n,t,r){var s,a,l,o,c,f,h,v;if(n==null){n="<anonymous>"}if(t==null){t=1}if(r==null){r=null}s=[];a=[];o=[];f=function(e,n){var t,r,i,l,u,c,f,p;for(r=0,u=s.length;r<u;r++){t=s[r];t(e,n)}if(n){for(i=0,c=a.length;i<c;i++){t=a[i];t(n)}}if(e){p=[];for(l=0,f=o.length;l<f;l++){t=o[l];p.push(t(e))}return p}};if(arguments.length===2){r=n;n="<anonymous>"}if(r){s.push(r)}try{c=(new i).load(P.parse(e,n,t));v=setTimeout(h=function(){var e,n;n=0;try{while(true){if(c.step()){f(null,c.value());return}else if(++n>=u){v=setTimeout(h);return}}}catch(t){e=t;if(e instanceof p){return f(e,null)}else{throw e}}})}catch(m){l=m;if(l instanceof SyntaxError){setTimeout(function(){return f(l,null)})}else{throw l}}return{abort:function(){clearTimeout(v);return this},then:function(e){s.push(e);return this},done:function(e){a.push(e);return this},fail:function(e){o.push(e);return this}}};Y=function(){var e,n,t,r,i,s,a,l,u;r=require("readline");a=r.createInterface({input:process.stdin,output:process.stdout,completer:function(e){var n;if(/^\s*$/.test(e)){if(n=/(^|\n)([ \t]+).*\n$/.exec(t)){if(e.length>=n[2].length){return[[e+"    "],e]}else{return[[n[2]],e]}}else{return[[e+"    "],e]}}else{return[[],e]}}});e=4;i=1;l=function(n){var t;if(n==null){n=">"}t=""+i;while(t.length<e){t="0"+t}return a.setPrompt(t+n+" ")};l(">");a.prompt();t="";n=1;u=0;s=null;a.on("line",function(e){++i;u=0;if(e===""&&t===""){l(">");a.prompt();n=i;return}t+=e+"\n";if(!/^[\t ]|(^|[(\[])(class|module|try|catch|finally|if|else)\b|\[[^\]]*$|\([^)]*$|\{[^\}]*$/.test(e)){return s=S(t,"input",n,function(e,r){if(e){if(e.trace){console.log(e.trace)}else if(e.message){console.log(e.message)}}else if(r){console.log(r.toSource(3))}s=null;t="";n=i;l(">");return a.prompt()})}else{l(":");return a.prompt()}});a.on("SIGINT",function(){if(s!=null){s.abort();t=""}else{a._refreshLine();if(a.line===""&&t===""){if(u){a.close()}else{u=1;a.clearLine();console.log("(^C again to quit)")}}else{u=0;a.clearLine();t=""}}++i;n=i;l(">");return a.prompt()});return a.on("close",function(){console.log("");return process.exit(0)})};if(typeof module!=="undefined"&&module!==null){C=require("fs");A=require("path");P=require("./parser.coffee");V=exports;V.repl=Y;if(!module.parent){N=[];T=2;M=1;d=process.argv.length;$=false;while(T<d){switch(w=process.argv[T++]){case"-h":console.error("Usage: coffee interpreter.coffee [ <filename> | -e <expression> | -i | -h ]");return;case"-i":$=true;break;case"--allow-class-redefinition":V.allowClassRedefinition=true;break;case"-e":N.push({file:"expression"+M++,source:process.argv[T++]});break;default:N.push({file:A.resolve(w),source:""+C.readFileSync(w)})}}for(Q=0,Z=N.length;Q<Z;Q++){L=N[Q];try{j(L.source,L.file)}catch(an){b=an;if(b instanceof SyntaxError){console.error(b.message)}else{throw b}}}if($||N.length===0){Y()}}}else{P=Yak.parser;(this.Yak!=null?this.Yak:this.Yak={}).interpreter=V={}}V.allowClassRedefinition=false;V["eval"]=S;V.evalSync=j;V.print=function(e){return console.log(e)}}.call(this);!function(){var e,n,t,r,i,s,a,l,u,o,c,f,p,h,v,m,g,y,w;a=document.querySelector("header");g=document.querySelector(".header-fill");s=document.querySelectorAll("h1");p=a.firstElementChild;o=document.querySelectorAll("nav a");w=document.querySelector(".try-yak");l=document.querySelector(".interpreter");h=document.querySelector(".prompt");y=document.querySelector(".prompt textarea");f=document.querySelector(".prompt .measure");l.style.display="block";a.style.position="fixed";a.style.left="24px";a.style.right="24px";r=false;n=void 0;e={};m=function(t){var i,u,c,f,h,v,m,g;v=p.lastElementChild.offsetHeight-p.offsetHeight;
h=l.offsetHeight;m=v+h;if(r){v=m}g=Math.min(0,Math.max(v,-window.scrollY));if(t===e){a.style.transition="top .3s";setTimeout(function(){return a.style.transition="none"},300)}a.style.top=g+"px";if(n){n.className=""}w.style.display=g<=m?"block":"none";c=0;u=s[0];while(c<s.length){i=s[c].getBoundingClientRect();if(i.top>96+(r?h:0)){break}u=s[c];++c}f=u.nextElementSibling.id;c=0;while(c<o.length){if(o[c].href.split("#").pop()===f){n=o[c];break}++c}return n.className="active"};window.addEventListener("scroll",m);m();v=function(){g.style.height=a.offsetHeight+"px";return m()};window.addEventListener("resize",v);v();w.addEventListener("click",function(){if(!r){r=true;setTimeout(function(){return i()},300);m(e);return w.textContent="Close"}else{r=false;m(e);return w.textContent="Try Yak"}});i=function(){y.focus();return y.selectionStart=y.selectionEnd=y.value.length};if(y.getBoundingClientRect().top>=0){i()}t=function(){f.textContent=y.value+"X";return y.style.height=f.offsetHeight+"px"};y.addEventListener("input",t);t();c=function(e,n){var t;t=document.createElement("div");t.className=e;t.textContent=n;l.insertBefore(t,h);return l.scrollTop=l.scrollHeight};u=function(e){var n,r,i,s,a,l,u;s=function(e){var t;t=r+e;y.value=t+n;return y.selectionStart=y.selectionEnd=t.length};r=y.value.slice(0,y.selectionStart);n=y.value.slice(y.selectionStart);a=r.split("\n").pop();i=/^\s*/.exec(a)[0];switch(e.keyCode){case 13:e.preventDefault();u=/class|module|if|else|try|catch|finally|\[[^\]]*$|\([^\)]*$|\{[^\}]*$/.test(a);if(e.shiftKey||y.selectionStart!==y.selectionEnd||y.selectionStart!==y.value.length||i.length!==0||u){if(u){i+="    "}s("\n"+i)}else{c("prompt",y.value);if(y.value){Yak.interpreter["eval"](y.value,"input",1,function(e,n){var t;if(e){return c("error",(t=e.trace)!=null?t:e.message)}else if(n){return c("output",n.toSource())}});y.value=""}}return t();case 9:e.preventDefault();if(e.shiftKey){l=Math.min(a.length-Math.ceil(a.length/4-1)*4,/\s*$/.exec(r)[0].length);if(l){r=r.slice(0,-l);return s("")}}else{return s(Array(Math.floor(a.length/4+1)*4-a.length+1).join(" "))}}};y.addEventListener("keydown",u);Yak.interpreter.print=function(e){return c("print",e)}}.call(this);Yak.interpreter.allowClassRedefinition=true;Yak.interpreter.evalSync("Boolean.instance.not = {\n    [true]: false\n    [false]: true\n}\n\nBoolean.instance.and = {\n    [true, [@x]]: @x\n    [false, [@x]]: false\n}\n\nBoolean.instance.or = {\n    [true, [@x]]: true\n    [false, [@x]]: @x\n}\n\nBoolean.instance.xor = {\n    [@x, [@x]]: false\n    [@x, [@y]]: true\n}\n\nFunject.assoc = {\n    # @x => [[key, value], [key, value], [key, value], ...]\n    [@pairs]:\n        result = {}\n        i = 0\n        {[]: i < @pairs.length}.while-true {\n            []:\n                result[@pairs[i][0]] = @pairs[i][1]\n                i |= i + 1\n        }\n        result\n    [@keys, @values]:\n        result = {}\n        (@keys.length == @values.length).on {\n            false: error['Key and value list lengths did not match']\n        }\n        i = 0\n        {[]: i < @keys.length}.while-true {\n            []:\n                result[@keys[i]] = @values[i]\n                i |= i + 1\n        }\n        result\n}\n\nFunject.instance.while-true = {\n    [@self, @body]: {\n        true:\n            @body[]\n            @self.while-true @body\n        false: nil\n    } @self[]\n}\n\nFunject.instance.do-while-true = {\n    [@self, @body]:\n        @body[]\n        @self.while-true @body\n}\n\nFunject.instance.on = {\n    [@self, @body]: @body @self\n}\n\nFunject.instance.then = {\n    [@self, [@body]]: @body[@self]\n}\n\nFunject.instance.apply = {\n    [@self, [@body]]: @self @body\n}\n\nFunject.instance.clone = {\n    [@self]: {} << @self\n}\nassert = {\n    [true]: nil\n    [false]: error['An assertion failed']\n    [true, @message]: nil\n    [false, @message]: error['An assertion failed: ' + @message]\n}\n\nassert== = {\n    [@value, @value]: nil\n    [@value, @other]: assert[false, 'Expected ' + @value.inspect + ' but got ' + @other.inspect]\n}\n\nunreachable := error['Unreachable code executed']\n\nargumentFlag = false\n\nvim := print['Real programmers use emacs, try using \"emacs\" instead']\n\nemacs := print['Real programmers use vim, try using \"vim\" instead']\n# Needs list random access ASAP\n\nList.instance.* = {\n    [@self, @n]:\n        list = []\n        @n.times[{[@i]: list |= list + @self}]\n        list\n}\n\nList.instance.+ = {\n    [@self, @l]:\n        list = @self.copy\n        @l.length.times[{[@i]: list.push![@l[@i]]}]\n        list\n}\n\nList.instance.- = {\n    [@self, @l]:\n        list = @self.copy\n        @l.length.times[{[@i]: list.remove-all![@l[@i]]}]\n        list\n}\n\nList.instance.empty? = {\n    [@self]: @self.length == 0\n}\n\nList.instance.insert = {\n    [@self, [@n, @f]]: @self.copy.insert![@n, @f]\n}\n\nList.instance.delete-at = {\n    [@self, [@n]]: @self.copy.delete-at![@n]\n}\n\nList.instance.set-at! = {\n    [@self, [@n, @f]]:\n        @self.insert![@n, @f]\n        @self.delete-at![@n + 1]\n}\n\nList.instance.set-at = {\n    [@self, [@n, @f]]: @self.copy.set-at![@n, @f]\n}\n\nList.instance.clear! = {\n    [@self]:\n        {[]: @self.length > 0}.while-true {\n            []: @self.delete-at![0]\n        }\n        @self\n}\n\nList.instance.clear = {\n	[@self]: []\n}\n\nList.instance.set! = {\n    [@self, [@l]]:\n        @self.clear!\n        @l.length.times[{[@i]: @self.push![@l[@i]]}]\n        @self\n}\n\nList.instance.set = {\n	[@self, [@l]]: @l.copy\n}\n\nList.instance.contains? = {\n    [@self, [@f]]: @self.index-of[@f] != -1\n}\n\nList.instance.pop! = {\n    [@self]:\n        result = @self[@self.length - 1]\n        @self.delete-at![@self.length - 1]\n        result\n}\n\nList.instance.pop = {\n	[@self]: @self.copy.pop!\n}\n\nList.instance.push! = {\n    [@self, [@f]]: @self.insert![@self.length, @f]\n}\n\nList.instance.push = {\n	[@self, [@f]]: @self.copy.push![@f]\n}\n\nList.instance.shift! = {\n    [@self]:\n        result = @self[0]\n        @self.delete-at![0]\n        result\n}\n\nList.instance.shift = {\n	[@self]: @self.copy.shift!\n}\n\nList.instance.unshift! = {\n    [@self, [@f]]: @self.insert![0, @f]\n}\n\nList.instance.unshift = {\n	[@self, [@f]]: @self.copy.unshift![@f]\n}\n\nList.instance.index-of = {\n    [@self, [@f]]:\n        found = false\n        i = 0\n        {[]: i < @self.length and found.not}.while-true {\n            []:\n                found |= @self[i] == @f\n                i |= i + 1\n        }\n        if found.not\n            -1\n        else\n            i - 1\n}\n\nList.instance.last-index-of = {\n    [@self, [@f]]:\n        found = false\n        i = @self.length - 1\n        {[]: i >= 0 and found.not}.while-true {\n            []:\n                found |= @self[i] == @f\n                i |= i - 1\n        }\n        if found.not\n            -1\n        else\n            i + 1\n}\n\nList.instance.join = {\n    [@self, [@s]]:\n        result = ''\n        i = 1\n        {[]: i < @self.length}.while-true {\n            []:\n                result |= result + @s + @self[i].to-string\n                i |= i + 1\n        }\n        @self[0] + result\n}\n\nList.instance.pluck! = {\n    [@self, [@key]]: @self.map![by[@key]]\n}\n\nList.instance.pluck = {\n	[@self, [@key]]: @self.clone.pluck![@key]\n}\n\nList.instance.invoke! = {\n    [@self, [@f]]: @self.map![{[@e]: (@e @f)[]}]\n}\n\nList.instance.invoke = {\n	[@self, [@f]]: @self.clone.invoke![@f]\n}\n\nList.instance.filter! = {\n    [@self, [@f]]:\n        i = @self.length - 1\n        {[]: i >= 0}.while-true {\n            []:\n                if @f[@self[i]].not\n                    @self.delete-at![i]\n                i |= i - 1\n        }\n        @self\n}\n\nList.instance.filter = {\n	[@self, [@f]]: @self.copy.filter![@f]\n}\n\nList.instance.reject! = {\n    [@self, [@f]]:\n        i = @self.length - 1\n        {[]: i >= 0}.while-true {\n            []:\n                if @f[@self[i]]\n                    @self.delete-at![i]\n                i |= i - 1\n        }\n        @self\n}\n\nList.instance.reject = {\n	[@self, [@f]]: @self.copy.reject![@f]\n}\n\nList.instance.reduce = {\n    [@self, [@f]]:\n        i = 0\n        result = @self[i]\n        {[]: i < @self.length - 1}.while-true {\n            []:\n                i |= i + 1\n                result |= @f[result, @self[i]]\n        }\n        result\n\n}\n\nList.instance.reduce-right = {\n    [@self, [@f]]:\n        i = @self.length - 1\n        result = @self[i]\n        {[]: i > 0}.while-true {\n            []:\n                i |= i - 1\n                result |= @f[result, @self[i]]\n        }\n        result\n}\n\nList.instance.every? = {\n    [@self, [@f]]:\n        self = @self.copy\n        i = 0\n        result = true\n        {[]: i < self.length and result}.while-true {\n            []:\n                result |= @f[self[i]]\n                i |= i + 1\n        }\n        result\n}\n\nList.instance.any? = {\n    [@self, [@f]]:\n        self = @self.copy\n        i = 0\n        result = false\n        {[]: i < self.length and result.not}.while-true {\n            []:\n                result |= @f[self[i]]\n                i |= i + 1\n        }\n        result\n}\n\nList.instance.first = {\n    []: nil\n    [@self, [@f]]:\n        result = nil\n        i = 0\n        {[]: i < @self.length and found.not}.while-true {\n            []:\n                if @f[@self[i]]\n                    result |= @self[i]\n                    found |= true\n                i |= i + 1\n        }\n        result\n}\n\nList.instance.last = {\n    []: nil\n    [@self, [@f]]:\n        result = nil\n        found = false\n        i = 0\n        {[]: i >= 0 and found.not}.while-true {\n            []:\n                if @f[@self[i]]\n                    result |= @self[i]\n                    found |= true\n                i |= i - 1\n        }\n}\n\nList.instance.take! = {\n    [@self, [@n]]:\n        self = @self.copy\n        @self.clear!\n        @n.times[{[@i]: @self.push![self[@i]]}]\n        @self\n}\n\nList.instance.take = {\n    [@self, [@n]]: @self.copy.take![@n]\n}\n\nList.instance.take-while! = {\n    [@self, [@f]]:\n        self = @self.copy\n        @self.clear!\n        i = 0\n        {[]: i < self.length and @f[self[i]]}.while-true {\n            []:\n                @self.push![self[i]]\n                i |= i + 1\n        }\n        @self\n}\n\nList.instance.take-while = {\n    [@self, [@f]]: @self.copy.take-while![@f]\n}\n\nList.instance.drop! = {\n    [@self, [@n]]:\n        self = @self.copy\n        @self.clear!\n        repeat = self.length - @n\n        repeat.times[{[@i]: @self.push[self[@n + @i]]}]\n        @self\n}\n\nList.instance.drop = {\n    [@self, [@n]]: @self.copy.drop![@n]\n}\n\nList.instance.drop-while! = {\n    [@self, [@f]]:\n        self = @self.copy\n        @self.clear!\n        dropping = true\n        i = 0\n        {[]: i < self.length}.while-true {\n            []:\n                if dropping.not or self[i].not\n                    @self.push![self[i]]\n                    dropping |= false\n                i |= i + 1\n        }\n        @self\n}\n\nList.instance.drop-while = {\n    [@self, [@f]]: @self.copy.drop-while![@f]\n}\n\nList.instance.remove-all! = {\n    [@self, [@f]]: @self.reject![{[@compare]: @f == @compare}]\n}\n\nList.instance.remove-all = {\n    [@self, [@f]]: @self.copy.remove-all![@f]\n}\n\nList.instance.unique! = {\n    [@self]:\n        result = []\n        @self.length.times[{\n            [@i]:\n                if result.contains?[@self[@i]].not\n                    result.push![@self[@i]]\n        }]\n        @self.set![result]\n}\n\nList.instance.unique = {\n    [@self, [@f]]: @self.copy.unique!\n}\n\nList.union! = {\n    @l:\n        result = []\n        joined = []\n        @l.length.times[{[@i]: joined = joined + @l[@i]}]\n        joined.length.times[{\n            [@i]:\n                if result.contains?[joined[@i]].not\n                    result.push![joined[@i]]\n        }]\n        @l.set![result]\n}\n\nList.union = {\n    @l: @l.copy.union!\n}\n\nList.instance.union! = {\n    [@self, @l]: @self.set![List.union[@self + @l]]\n}\n\nList.instance.union = {\n    [@self, @l]: @self.copy.union![@l]\n}\n\nList.intersection! = {\n    @l:\n        joined = []\n        refined = []\n        @l.length.times[{[@i]: joined = joined + @l[@i]}]\n        joined.length.times[{\n            [@i]:\n                allContains = true\n                i = 0\n                {[]: i < @l.length and allContains}.while-true {\n                    []:\n                        allContains |= @l[i].contains?[joined[@i]]\n                        i |= i + 1\n                }\n                if allContains.not\n                    refined.remove-all![joined[i]]\n        }]\n        @l.set![refined.unique]\n}\n\nList.intersection = {\n    @l: @l.copy.intersection!\n}\n\nList.instance.intersection! = {\n    [@self, @l]: @self.set![List.intersection[@self + @l]]\n}\n\nList.instance.intersection = {\n    [@self, @l]: @self.copy.intersection![@l]\n}\n\nList.instance.compact! = {\n    [@self]: @self.remove-all![nil]\n}\n\nList.instance.compact = {\n    [@self]: @self.copy.compact!\n}\n\nList.instance.swap! = {\n    [@self, [@index1, @index2]]:\n        store = @self[index1]\n        @self.set-at![@index1, @self[@index2]]\n        @self.set-at![@index2, store]\n        @self\n}\n\nList.instance.swap = {\n    [@self, [@index1, @index2]]: @self.copy.swap![@index1, @index2]\n}\n\nList.instance.shuffle! = {\n    [@self]:\n        @self.length.times[{\n            [@i]:\n                switch = Number.random[@self.length]\n                @self.swap![@i, switch]\n        }]\n        @self\n}\n\nList.instance.shuffle = {\n    [@self]: @self.copy.shuffle!\n}\n\nList.instance.reverse! = {\n    [@self]:\n        result = []\n        @self.length.times[{[@i]: result.push![@self[@self.length - 1 - @i]]}]\n        @self.set![result]\n        @self\n}\n\nList.instance.reverse = {\n    [@self]: @self.copy.reverse!\n}\nNumber.e = 2.718281828459045\nNumber.pi = 3.141592653589793\nNumber.epsilon = 1.0e-12\n\nNumber.instance.abs = {\n    [@x]: {\n        true: 0 - @x\n        false: @x\n    } (@x < 0)\n}\n\nNumber.instance.negate = {\n    [@x]: 0 - @x\n}\n\nNumber.instance.factorial = {\n    [0]: 1\n    [@n]: @n * ((@n - 1).factorial)\n}\n\nNumber.instance.reciprocal = {\n    [@x]: 1 / @x\n}\n\nNumber.instance.radians-to-degrees = {\n    [@x]: (@x * 180) / Number.pi\n}\n\nNumber.instance.degrees-to-radians = {\n    [@x]: (@x * Number.pi) / 180\n}\n\nNumber.instance.sqrt = {\n    [@x]:\n        last-guess = nil\n        guess = @x / 3\n        {[]: (guess - last-guess).abs > Number.epsilon}.do-while-true {\n            []:\n                last-guess |= guess\n                guess |= (guess + (@x / guess)) / 2\n        }\n        guess\n}\n\nNumber.instance.root = {\n    [@x, [0]]: error['Out of range']\n    [@x, [@y]]: (@x.ln * @y).exp\n}\n\nNumber.instance.sin = {\n    [@x]:\n        constrained = @x % (Number.pi / 2)\n        subtract = false\n        count = 1\n        last-guess = nil\n        guess = 0\n        {[]: (guess - last-guess).abs > Number.epsilon}.do-while-true {\n            []:\n                last-guess |= guess\n                {\n                    true: guess |= guess - ((constrained ^ count) / (count.factorial))\n                    false: guess |= guess + ((constrained ^ count) / (count.factorial))\n                } subtract\n                count |= count + 2\n                subtract |= subtract.not\n        }\n        guess\n}\n\nNumber.instance.cos = {\n    [@x]: (@x + (Number.pi / 2)).sin\n}\n\nNumber.instance.tan = {\n    [@x]: (@x.sin) / (@x.cos)\n}\n\nNumber.instance.sec = {\n    [@x]: 1 / (@x.cos)\n}\n\nNumber.instance.csc = {\n    [@x]: 1 / (@x.sin)\n}\n\nNumber.instance.cot = {\n    [@x]: (@x.cos) / (@x.sin)\n}\n\nNumber.instance.atan = {\n    [@x]:\n        {\n            true: 0 - ((0 - @x).atan)\n            false:\n                # make an initial guess\n                theta = (@x * (Number.pi / 2)) / (@x + 1)\n                eps = (Number.pi / 2) * Number.epsilon\n                step = theta\n                {[]: (step * step) > eps}.while-true[{\n                    []:\n                        sin-theta = theta.sin\n                        cos-theta = theta.cos\n                        step = (sin-theta * cos-theta) - (@x * cos-theta * cos-theta)\n                        theta = theta - step\n                }]\n                theta\n        } (@x < 0)\n}\n\nNumber.instance.asin = {\n    [@x]:\n        {\n            true: error['Out of range']\n        } @x < -1.0 or @x > 1.0\n        {\n            true: (Number.pi / 2) * @x\n            false: (@x / (1.0 - (@x * @x)).sqrt).atan\n        } ((@x == -1.0) or (@x == 1.0))\n}\n\nNumber.instance.acos = {\n    [@x]: (Number.pi / 2) - (@x.asin)\n}\n\n#|\nNumber.instance.atan/ = {\n    [0, [0]]: error['Out of range']\n    [@x, [@y]]: {\n        true: (@x / @y).atan\n        false: {\n            true: (@x / @y).atan + Number.pi\n            false: {\n                {\n                    true: Number.pi / 2\n                    false: {\n                        true: 0 - (Number.pi / 2)\n                        false: unreachable\n                    } ((@x == 0) and (@y < 0))\n                } ((@x == 0) and (@y > 0))\n            } ((@x < 0) and (@y < 0))\n        } ((@x < 0) and (@y >= 0))\n    } (@x > 0)\n}\n|#\n\nNumber.instance.asec = {\n    [@x]: 1 / (@x.acos)\n}\n\nNumber.instance.acsc = {\n    [@x]: 1 / (@x.asin)\n}\n\nNumber.instance.acot = {\n    [@x]: 1 / (@x.atan)\n}\n\n#Numbee.round is primitive, and should be part of the interpreter\n\nNumber.instance.ceil = {\n    [@x]:\n        {\n            true: @x\n            false: (@x + 0.5).round\n        } ((@x % 1) == 0)\n}\n\nNumber.instance.floor = {\n    [@x]: (@x - 0.5).round\n}\n\n#exp and ln will be implemented at the primitive level\n\nNumber.instance.log10 = {\n    [@x]: (@x.ln) / (10.ln)\n}\n\nNumber.instance.log = {\n    [@x, [@y]]: (@x.ln) / (@y.ln)\n}\n\nNumber.instance.to-fixed = {\n    [@x, [@n]]:\n        f = 10 ^ @n\n        (@x * f).round / f\n}\n\n\n# Calls function repeatedly with arguments 0 through @y-1\nNumber.instance.times = {\n    [@x, [@y]]:\n        i = 0\n        {[]: i < @x}.while-true {\n            []:\n                @y[i]\n                i |= i + 1\n        }\n}\n\nNumber.instance.close-to? = {\n    [0, [@x]]: @x.abs < 0.0001\n    [@x, [0]]: @x.abs < 0.0001\n    [@x, [@y]]:\n        tolerance = @x.abs.max[@y.abs] * 0.0001\n        (@x - @y).abs <= tolerance\n}\n#assuming primitives: [<number>], [<range>], index-of, last-index-of, uppercase? lowercase?, alpha?\n\nString.watman := 'NaN'.repeat[15] + ' Batman!'\n\nString.lowercase-set = 'abcdefghijklmnopqrstuvwxyz'\n\nString.uppercase-set = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nString.number-set = '0123456789'\n\nString.alphanumeric-set = String.lowercase-set + String.uppercase-set + String.number-set\n\nString.instance.contains? = {\n    [@self, [@s]]: @self.index-of[@s] != -1\n}\n\nString.instance.begins-with? = {\n    [@self, [@s]]: @self.index-of[@s] == 0\n}\n\nString.instance.ends-with? = {\n    [@self, [@s]]: @self.last-index-of[@s] == (@self.length - @s.length)\n}\n\nString.instance.index-of = {\n    [@self, [@s]]:\n        i = 0\n        streak = 0\n        streakStart = -1\n        complete = false\n        {[]: i < @self.length and streak < @s.length}.while-true {\n            []:\n                char = @self[i]\n                (char == @s[streak]).on {\n                    true:\n                        (streak == 0).on {\n                            true: streakStart |= i\n                            false: nil\n                        }\n                        streak |= streak + 1\n                    false: streak |= 0\n                }\n                i |= i + 1\n        }\n        (streak == @s.length).on {\n            true: streakStart\n            false: -1\n        }\n}\n\nString.instance.last-index-of = {\n    [@self, [@s]]:\n        (@self.contains?[@s].not).on { # For speed, do a pre-check to see if the owner contains the string\n            true: -1\n            false:\n                i = @self.length - 1\n                streak = @s.length - 1\n                streakStart = -1\n                complete = false\n                {[]: i >= 0 and streak >= 0}.while-true {\n                    []:\n                        char = @self[i]\n                        (char == @s[streak]).on {\n                            true:\n                                (streak == 0).on {\n                                    true: streakStart |= i\n                                    false: nil\n                                }\n                                streak |= streak - 1\n                            false: streak |= @s.length - 1\n                        }\n                        i |= i - 1\n                }\n                streakStart\n        }\n}\n\n# Not working due to missing push! List primitive\nString.instance.split = {\n    [@self, [@s]]:\n        result = []\n        check = @self\n        {[]: check.contains?[@s]}.while-true {\n            []:\n                next = check.substring[0, check.index-of[@s]]\n                result.push![next]\n                check |= check.substring[0, check.index-of[@s] + @s.length]\n        }\n        result.push![check]\n}\n\nString.instance.substring = {\n    [@self, [@start]]: @self.substring[@start, @self.length]\n    [@self, [@start, @end]]:\n        start = @start\n        end = @end\n        (start < 0).on {\n            true: start |= @self.length + start\n            false: nil\n        }\n        (end < 0).on {\n            true: end |= @self.length + end\n            false: nil\n        }\n        result = ''\n        i = start\n        {[]: i < end}.while-true {\n            []:\n                result |= result + @self[i]\n                i |= i + 1\n        }\n        result\n}\n\nString.instance.replace = {\n    [@self, [@substring, @replace]]: @self.split[@substring].join[@replace]\n}\n\nString.instance.replace-first = {\n    [@self, [@substring, @replace]]:\n        list = @self.split[@substring]\n        if list.length <= 1\n            @self\n        else\n            result = list[0] + @replace\n            i = 1\n            {[]: i < list.length - 1}.while-true {\n                []:\n                    result |= list[i] + @substring\n                    i |= i + 1\n                    \n            }\n            result + list[list.length - 1]\n}\n\nString.instance.repeat = {\n    [@self, [0]]: ''\n    [@self, [@n]]: @self.repeat[@n - 1] + @self\n}\n\nString.instance.matches-set? = {\n    [@self, [@set]]:\n        i = 0\n        result = @self.length > 0\n        {[]: i < @self.length and result}.while-true {\n            []:\n                result |= @set.contains?[@self[i]]\n                i |= i + 1\n        }\n        result\n}\n\nString.instance.uppercase? = {\n    [@self]: @self.matches-set[String.uppercase-set]\n}\n\nString.instance.lowercase? = {\n    [@self]: @self.matches-set[String.lowercase-set]\n}\n\nString.instance.alpha? = {\n    [@self]: @self.uppercase? or @self.lowercase?\n}\n\nString.instance.alphanumeric? = {\n    [@self]: @self.matches-set[String.alphanumeric-set]\n}\n\nString.instance.uppercase = {\n    [@self]:\n        result = ''\n        i = 0\n        {[]: i < @self.length}.while-true {\n            []:\n                char = @self[i]\n                if char.lowercase?\n                    char |= String.uppercase-set[String.lowercase-set.index-of[char]]\n                else\n                    nil\n                result |= result + char\n                i |= i + 1\n        }\n        result\n}\n\nString.instance.lowercase = {\n    [@self]:\n        result = ''\n        i = 0\n        {[]: i < @self.length}.while-true {\n            []:\n                char = @self[i]\n                if char.uppercase?\n                    char |= String.lowercase-set[String.uppercase-set.index-of[char]]\n                else\n                    nil\n                result |= result + char\n                i |= i + 1\n        }\n        result\n}\n\nString.instance.swap-case = {\n    [@self]:\n        result = ''\n        i = 0\n        {[]: i < @self.length}.while-true {\n            []:\n                char = @self[i]\n                if char.uppercase?\n                    char |= String.lowercase-set[String.uppercase-set.index-of[char]]\n                else if char.lowercase?\n                    char |= String.uppercase-set[String.lowercase-set.index-of[char]]\n                else\n                    nil\n                result |= result + char\n                i |= i + 1\n        }\n        result\n}\n\nString.instance.title-case = {\n    ['']: ''\n    [@self]:\n        list = @self.split[' ']\n        result = ''\n        i = 0\n        {[]: i < list.length}.while-true {\n            []:\n                if i != 0\n                    result |= result + ' ' + list[i][0].uppercase + list[i].substring[1]\n                else\n                    result |= result + list[i][0].uppercase + list[i].substring[1]\n                i |= i + 1\n        }\n        result\n}\n\nString.instance.capitalize = {\n    ['']: ''\n    [@self]: @self[0].uppercase + @self.substring[1].lowercase\n}\n\nString.instance.cap-first = {\n    ['']: ''\n    [@self]: @self[0].uppercase + @self.substring[1]\n}\n\nString.instance.quote = {\n    [@self]: '\"' + (@self.replace['\\\\', '\\\\\\\\'].replace['\"', '\\\\\"']) + '\"'\n}\n\n#|\n& -> &amp;\n< -> &lt;\n> -> &gt;\n\" -> &quot;\n' -> &apos;\n|#\nString.instance.escape-html = {\n    [@self]: @self.replace['&', '&amp;'].replace['<', '&lt;'].replace['>', '&gt;'].replace['\"', '&quot;'].replace['\\'', '&apos;']\n}\n\nString.instance.unescape-html = {\n    [@self]: @self.replace['&amp;', '&'].replace['&lt;', '<'].replace['&gt;', '>'].replace['&quot;', '\"'].replace['&apos;', '\\'']\n}\n\nString.instance.lines = {\n    [@self]: @self.split['\\n']\n}\n");Yak.interpreter.allowClassRedefinition=false;